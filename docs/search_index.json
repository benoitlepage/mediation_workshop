[["index.html", "Mediation Workshop Chapter 1 Introduction", " Mediation Workshop Benoît Lepage 2024-02-06 Chapter 1 Introduction The objective of this document is to provide practical examples for the Expanse report “Mediation Analysis: a Starting Guide for Epidemiologists” with R scripts corresponding to the different estimation methods presented in the report. "],["software.html", "Chapter 2 Software", " Chapter 2 Software The examples given in this workshop have been elaborated for R (version 4.2.2). Depending on the estimator, some R packages might be necessary: COMPLETE ONCE ALL THE EXAMPLES ARE DONE "],["data-sets.html", "Chapter 3 Data sets 3.1 General presentation of the data used in our examples 3.2 Data generating mechanisms", " Chapter 3 Data sets 3.1 General presentation of the data used in our examples Four data sets have been simulated, each containing 7 variables: 2 baseline confounders (denoted \\(L(0)\\) in the DAGs): L0_male, a binary variable indicating the sex of the participant (1 for men, 0 for women); L0_parent_low_educ_lv, a binary variable indicated if the parents of the participants had a low level of education (1 for a low educational level, 0 for a high educational level); 1 exposure of interest (denoted \\(A\\) in the DAGs): A0_ace, a binary variable indicating if the participants had been exposed to a high level of “Adverse childhood experience”; 1 confounder of the mediator-outcome relationship (denoted \\(L(1)\\) in the DAGs): L1, a binary variable indicating if the participant has a low educational level (1 for a low educational level, 0 for a high educational level); 1 mediator of interest (denoted \\(M\\) in the DAGs): M_smoking, a binary variable indicating if the participant is a smoker (1 for smokers, 0 for non-smokers); 2 outcomes (denoted \\(Y\\) in the DAGs): Y2_death, a binary variable indicating the occurrence of death before 60 years of age (1 if dead, 0 if alive); Y2_qol, a quantitative variable corresponding to a quality of life measurement. 3.2 Data generating mechanisms The 4 data generating mechanisms used to simulate the data sets are described in chapter 4 of the Expanse “Mediation analysis” report: The first two data sets are simulated from a causal model where confounders of the mediator-outcome relationship (\\(L(1)\\)) are not affected by the exposure \\(A\\) (Figure 3.1), The data set df1.csv is simulated from the statistical model \\(\\mathcal{M}_1\\), which does not contain any \\(A \\ast M\\) interaction effect on the outcome \\(Y\\). The data set df1_int.csv is simulated from the statistical model \\(\\mathcal{M}_{1 \\ast}\\), which contains an \\(A \\ast M\\) interaction effect on the outcome \\(Y\\). Figure 3.1: Causal model 1 The next two data set are simulated from a causal model where confounders of the mediator-outcome relationship (\\(L(1)\\)) are affected by the exposure \\(A\\) (Figure 3.2), The data set df2.csv is simulated from the statistical model \\(\\mathcal{M}_2\\), which does not contain any \\(A \\ast M\\) interaction effect on the outcome \\(Y\\). The data set df2_int.csv is simulated from the statistical model \\(\\mathcal{M}_{2 \\ast}\\), which contains an \\(A \\ast M\\) interaction effect on the outcome \\(Y\\). Figure 3.2: Causal model 2 The R functions used to simulate these 4 data sets are given in the Appendix A. The Appendix B describes how the true values for the estimands of the causal quantities of interest given in Table 2 of the Expanse “Mediation analysis” report were calculated. Those true values are the theoretical values expected under the causal and statistical models \\(\\mathcal{M}_1\\), \\(\\mathcal{M}_{1 \\ast}\\), \\(\\mathcal{M}_2\\) and \\(\\mathcal{M}_{2 \\ast}\\). Estimations that will be obtained from the data sets df1.csv, df1_int.csv, df2.csv, and df2_int.csv will be slightly different from the true values because of sample variability. "],["ChapBaronKennySem.html", "Chapter 4 Baron and Kenny, structural equation models", " Chapter 4 Baron and Kenny, structural equation models "],["ChapTradRegModels.html", "Chapter 5 Traditional regression models 5.1 Estimation of the Average Total Effect (ATE) 5.2 Two-way decomposition 5.3 Three-way decomposition 5.4 Four-way decomposition", " Chapter 5 Traditional regression models Traditional regression models can be applied in the absence of an intermediate confounder \\(L(1)\\) of the \\(M-Y\\) relationship affected by the exposure \\(A\\) (Causal model 1). They can be used for two-way, three-way and four-way decomposition of the average total effect. In the following examples, we use the df1_int.csv data set with a \\(A \\star M\\) interaction effect on the outcome. df1_int &lt;- read.csv(file = &quot;df1_int.csv&quot;) If we assumed that there was no \\(A \\star M\\) interaction, then the A0_ace:M_smoking interaction terms should be removed from the models below (applicable if we use the df1.csv data set). 5.1 Estimation of the Average Total Effect (ATE) The average total effect is the difference between the mean outcome had the whole population been exposed to adverse childhood experience (ACE), compared to the mean outcome had the whole population been unexposed to ACE: \\(\\text{ATE} = \\mathbb{E}(Y_{A=1}) - \\mathbb{E}(Y_{A=0})\\). For the quantitative outcome, the ATE of the adverse childhood experience \\(A\\) on the quality of life score \\(Y\\) can be estimated using a traditional linear regression of Y_qol on A0_ace, adjusted for the baseline confounders L0_male and L0_parent_low_educ_lv. For the binary outcome (death), we can estimate a risk difference applying a Generalized Linear Model with a Gaussian distribution and identity link, as suggested by Naimi et al (Naimi and Whitcomb 2020). The regression coefficient of the exposure variable \\(A\\) is used to estimate the risk difference or the average difference. \\[\\begin{equation} \\mathbb{E}(Y \\mid A, L(0)) = \\alpha_0 + \\alpha_A A + \\alpha_{L(0)} L(0) \\tag{5.1} \\end{equation}\\] \\[ \\hat{\\Psi}_{\\text{trad}}^{\\text{ATE}} = \\hat{\\alpha}_A\\] # For quantitative outcomes, apply a linear regression of Y on A (A0_ace), # adjusted for the baseline confounders L(0): trad_ATE_qol &lt;- lm(Y_qol ~ A0_ace + L0_male + L0_parent_low_educ_lv, data = df1_int) # For binary outcomes, apply a GLM of Y on A with a Gaussian distribution and # identity link, adjusted for the baseline confounders: trad_ATE_death &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = gaussian(&quot;identity&quot;), data = df1_int) # Use the regression coefficient of the exposure (A0_ace) to estimate the ATE ATE_trad_qol &lt;- coefficients(trad_ATE_qol)[&quot;A0_ace&quot;] # -7.210089 ATE_trad_death &lt;- coefficients(trad_ATE_death)[&quot;A0_ace&quot;] # 0.07720726 The estimation of 95% confidence intervals could be obtained directly from the linear regression with quantitative outcomes (equation (5.1)). However, using a robust (sandwich) variance estimator or applying a bootstrap procedure is recommended (Naimi and Whitcomb 2020). library(sandwich) # for the Quality of Life outcome ATE_trad_qol &lt;- list(ATE = coef(trad_ATE_qol)[&quot;A0_ace&quot;], lo = coef(trad_ATE_qol)[&quot;A0_ace&quot;] - qnorm(0.975) * sqrt(sandwich(trad_ATE_qol)[&quot;A0_ace&quot;,&quot;A0_ace&quot;]), hi = coef(trad_ATE_qol)[&quot;A0_ace&quot;] + qnorm(0.975) * sqrt(sandwich(trad_ATE_qol)[&quot;A0_ace&quot;,&quot;A0_ace&quot;])) ATE_trad_qol # ATE = -7.210089 , IC95% = [-7.978234 ; -6.441944] # for death outcome ATE_trad_death &lt;- list(ATE = coef(trad_ATE_death)[&quot;A0_ace&quot;], lo = coef(trad_ATE_death)[&quot;A0_ace&quot;] - qnorm(0.975) * sqrt(sandwich(trad_ATE_death)[&quot;A0_ace&quot;,&quot;A0_ace&quot;]), hi = coef(trad_ATE_death)[&quot;A0_ace&quot;] + qnorm(0.975) * sqrt(sandwich(trad_ATE_death)[&quot;A0_ace&quot;,&quot;A0_ace&quot;])) ATE_trad_death # ATE = 0.07720726 , IC95% = [0.04945859 ; 0.1049559] # 95% CI calculation applying a bootstrap procedure library(boot) bootfunc &lt;- function(data,index){ boot_dat &lt;- data[index,] mod.qol &lt;- lm(Y_qol ~ A0_ace + L0_male + L0_parent_low_educ_lv, data = boot_dat) mod.death &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = gaussian(&quot;identity&quot;), data = boot_dat) est &lt;- c(coef(mod.qol)[&quot;A0_ace&quot;], coef(mod.death)[&quot;A0_ace&quot;]) return(est) } set.seed(1234) boot_est &lt;- boot(df1_int,bootfunc,R=2000) # the 95% CI for the estimation of the ATE of ACE on QoL is: boot.ci(boot_est, index = 1, type = &quot;norm&quot;) # (-7.978, -6.444 ) # the 95% CI for the estimation of the ATE of ACE on death is: boot.ci(boot_est, index = 2, type = &quot;norm&quot;) # ( 0.0502, 0.1040 ) Alternatively for binary outcomes, the total effect conditional on baseline confounders can be expressed on an Odds Ratio scale \\(\\text{OR}^{\\text{TE}}\\), using the logistic regression (5.2). \\[\\begin{equation} \\text{logit} P(Y = 1 \\mid A, L(0)) = \\alpha_0 + \\alpha_A A + \\alpha_{L(0)}^\\prime L(0) \\tag{5.2} \\end{equation}\\] \\[ \\text{OR}^{\\text{TE}} \\mid L(0) = \\exp \\hat{\\alpha}_A \\] TE_death_model &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df1_int) res_TE_death &lt;- summary(TE_death_model) tot.effect.death.OR &lt;- list(OR = exp(coef(res_TE_death)[&quot;A0_ace&quot;,&quot;Estimate&quot;]), lo = exp(coef(res_TE_death)[&quot;A0_ace&quot;,&quot;Estimate&quot;] - qnorm(0.975) * coef(res_TE_death)[&quot;A0_ace&quot;,&quot;Std. Error&quot;]), hi = exp(coef(res_TE_death)[&quot;A0_ace&quot;,&quot;Estimate&quot;] + qnorm(0.975) * coef(res_TE_death)[&quot;A0_ace&quot;,&quot;Std. Error&quot;])) tot.effect.death.OR # OR = 1.523254 , 95% CI = [ 1.323317 ; 1.753398] 5.2 Two-way decomposition In order to carry-out two-way decomposition mediation analyses, with a binary mediator and a continuous outcome, Valeri and VanderWeele suggest using the following linear regression of the outcome and logistic regression of the mediator:(Valeri and VanderWeele 2013) \\[\\begin{equation} \\mathbb{E}(Y \\mid A, M,L(0),L(1)) = \\gamma_0 + \\gamma_A A + \\gamma_M M + \\gamma_{A \\ast M} (A \\ast M) + \\gamma_{L(0)}^\\prime L(0) + \\gamma_{L(1)}^\\prime L(1) \\tag{5.3} \\end{equation}\\] \\[\\begin{equation} \\text{logit}P(M=1 \\mid A,L(0),L(1)) = \\beta_0 + \\beta_A A + \\beta_{L(0)}^\\prime L(0) + \\beta_{L(1)}^\\prime L(1) \\tag{5.4} \\end{equation}\\] If the outcome is binary, they suggest using the following logistic regression of the outcome instead of the previous linear regression: \\[\\begin{equation} \\small \\text{logit}P(Y \\mid A, M,L(0),L(1)) = \\gamma_0 + \\gamma_A A + \\gamma_M M + \\gamma_{A \\ast M} (A \\ast M) + \\gamma_{L(0)}^\\prime L(0) + \\gamma_{L(1)}^\\prime L(1) \\tag{5.5} \\end{equation}\\] trad_qol_am &lt;- lm(Y_qol ~ A0_ace + M_smoking + A0_ace:M_smoking + L0_male + L0_parent_low_educ_lv + L1, data = df1_int) gamma.A.q &lt;- coef(trad_qol_am)[&quot;A0_ace&quot;] gamma.M.q &lt;- coef(trad_qol_am)[&quot;M_smoking&quot;] gamma.AM.q &lt;- coef(trad_qol_am)[&quot;A0_ace:M_smoking&quot;] trad_m &lt;- glm(M_smoking ~ A0_ace + L0_male + L0_parent_low_educ_lv + L1, family = &quot;binomial&quot;, data = df1_int) beta.0 &lt;- coef(trad_m)[&quot;(Intercept)&quot;] beta.A &lt;- coef(trad_m)[&quot;A0_ace&quot;] trad_death_am &lt;- glm(Y_death ~ A0_ace + M_smoking + A0_ace:M_smoking + L0_male + L0_parent_low_educ_lv + L1, family = &quot;binomial&quot;, data = df1_int) gamma.A.d &lt;- coef(trad_death_am)[&quot;A0_ace&quot;] gamma.M.d &lt;- coef(trad_death_am)[&quot;M_smoking&quot;] gamma.AM.d &lt;- coef(trad_death_am)[&quot;A0_ace:M_smoking&quot;] 5.2.1 Controlled Direct Effect The Controlled Direct Effect is defined as \\(\\text{CDE}_m = \\mathbb{E}(Y_{A=1,M=m}) - \\mathbb{E}(Y_{A=0,M=m})\\): For continuous outcome, using parameters from equation (5.3), it can be estimated by: \\[\\text{CDE}_m = \\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M} \\times m\\] ### For a continuous outcome # setting the mediator to M=0 trad_CDE_qol_m0 &lt;- gamma.A.q + gamma.AM.q * 0 trad_CDE_qol_m0 # -3.715265 # setting the mediator to M=1 trad_CDE_qol_m1 &lt;- gamma.A.q + gamma.AM.q * 1 trad_CDE_qol_m1 # -9.330657 For binary outcomes, using parameters from equation (5.5), it can be estimated on the OR scale by: \\[OR^{\\text{CDE}_m} = \\text{exp}\\left(\\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M} \\times m\\right)\\] ### For a binary outcome ## setting the mediator to M=0 trad_OD_CDE_death_m0 &lt;- exp(gamma.A.d + gamma.AM.d * 0) trad_OD_CDE_death_m0 # OR_CDE_{M=0} = 1.442942 ## setting the mediator to M=1 trad_OD_CDE_death_m1 &lt;- exp(gamma.A.d + gamma.AM.d * 1) trad_OD_CDE_death_m1 # OR_CDE_{M=1} = 1.461464 5.2.2 Natural Direct and Indirect effects The Pure Natural Direct Effect (PNDE) and the Total Natural Indirect Effect (TNIE) are defined as: \\(\\text{PNDE} = \\mathbb{E}\\left(Y_{A=1,M_{A=0}}) - \\mathbb{E}(Y_{A=0,M_{A=0}}\\right)\\), \\(\\text{TNIE} = \\mathbb{E}\\left(Y_{A=1,M_{A=1}}) - \\mathbb{E}(Y_{A=1,M_{A=0}}\\right)\\). Alternatively, one can use the Total Natural Direct Effect (TNDE) and the Pure Natural Indirect Effect (PNIE): \\(\\text{TNDE} = \\mathbb{E}\\left(Y_{A=1,M_{A=1}}) - \\mathbb{E}(Y_{A=0,M_{A=1}}\\right)\\), \\(\\text{PNIE} = \\mathbb{E}\\left(Y_{A=0,M_{A=1}}) - \\mathbb{E}(Y_{A=0,M_{A=0}}\\right)\\). With a continuous outcome and a binary mediator, the PNDE and TNDE can be estimated using the linear regression of the outcome (equation (5.3)) and the logistic regression of the mediator (equation (5.4)): \\[\\text{PNDE} \\mid L(0), L(1) = \\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M} \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\] \\[\\scriptsize \\text{TNIE} \\mid L(0), L(1) = \\left( \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 \\right) \\left[ \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))} - \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\right]\\] The alternative TNDE ad PNIE can be estimated by: \\[\\text{TNDE} \\mid L(0), L(1) = \\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M}\\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\] \\[\\scriptsize \\text{PNIE} \\mid L(0), L(1) = \\left( \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\left[ \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))} - \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\right]\\] Conditional on participants for which \\(L(0)=0\\) and \\(L(1)=0\\), these expressions are simplified: \\[\\text{PNDE} \\Big| (L(0)=0, L(1)=0) = \\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M}\\frac{exp(\\hat{\\beta}_0)}{1 + exp(\\hat{\\beta}_0)}\\] \\[\\text{TNIE} \\Big| (L(0)=0, L(1)=0) = \\left( \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\left[ \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A )}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A )} - \\frac{exp(\\hat{\\beta}_0 )}{1 + exp(\\hat{\\beta}_0)}\\right]\\] and \\[\\text{TNDE} \\Big| (L(0)=0, L(1)=0) = \\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M}\\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A)}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A)}\\] \\[\\text{PNIE} \\Big| (L(0)=0, L(1)=0) = \\hat{\\gamma}_M \\left[ \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A )}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A )} - \\frac{exp(\\hat{\\beta}_0 )}{1 + exp(\\hat{\\beta}_0)}\\right]\\] ### For a continuous outcome, in the subgroup with L(0)=0 and L(1)=0 ## The PNDE and TNIE are: trad_PNDE_qol &lt;- gamma.A.q + gamma.AM.q * (exp(beta.0)) / (1 + exp(beta.0)) trad_PNDE_qol # -4.845089 trad_TNIE_qol &lt;- (gamma.M.q + gamma.AM.q) * (exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) - exp(beta.0) / (1 + exp(beta.0))) trad_TNIE_qol # -1.50119 ## The TNDE and PNIE are: trad_TNDE_qol &lt;- gamma.A.q + gamma.AM.q * exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) trad_TNDE_qol # -5.436773 trad_PNIE_qol &lt;- gamma.M.q * (exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) - exp(beta.0) / (1 + exp(beta.0))) trad_PNIE_qol # -0.9095061 For binary outcomes, total, direct and indirect effects can be expressed on relative risk or odds ratio scales: The total effect risk ratio is equal to : \\[\\text{RR}^\\text{TE}=\\frac{\\mathbb{E}(Y_1)}{\\mathbb{E}(Y_0)}=\\frac{\\mathbb{E}(Y_{1,M_1})}{\\mathbb{E}(Y_{0,M_0})}\\] The total effect risk ratio can be decomposed as the product of the PNDE risk ratio and the TNIE risk ratio: \\[\\text{RR}^\\text{TE}=\\frac{\\mathbb{E}(Y_{1,M_1})}{\\mathbb{E}(Y_{0,M_0})}=\\frac{\\mathbb{E}(Y_{1,M_0})}{\\mathbb{E}(Y_{0,M_0})} \\times \\frac{\\mathbb{E}(Y_{1,M_1})}{\\mathbb{E}(Y_{1,M_0})}=\\text{RR}^\\text{PNDE} \\times \\text{RR}^\\text{TNIE}\\] Similarly, the total effect risk ratio can be decomposed as the product of the TNDE risk ratio and the PNIE risk ratio: \\[\\text{RR}^\\text{TE}=\\frac{\\mathbb{E}(Y_{1,M_1})}{\\mathbb{E}(Y_{0,M_0})}=\\frac{\\mathbb{E}(Y_{1,M_1})}{\\mathbb{E}(Y_{0,M_1})} \\times \\frac{\\mathbb{E}(Y_{0,M_1})}{\\mathbb{E}(Y_{0,M_0})}=\\text{RR}^\\text{TNDE} \\times \\text{RR}^\\text{PNIE}\\] PNDE, TNIE, TNDE and PNIE can also be given on the OR scale, \\[\\text{OR}^\\text{PNDE} = \\frac{\\frac{P\\left(Y_{A=1,M_{A=0}}=1\\right)}{1 - P\\left(Y_{A=1,M_{A=0}}=1\\right)}}{\\frac{P\\left(Y_{A=0,M_{A=0}}=1\\right)}{1 - P\\left(Y_{A=0,M_{A=0}}=1\\right)}} \\quad \\text{,} \\quad \\text{OR}^\\text{TNIE} = \\frac{\\frac{P\\left(Y_{A=1,M_{A=1}}=1\\right)}{1 - P\\left(Y_{A=1,M_{A=1}}=1\\right)}}{\\frac{P\\left(Y_{A=1,M_{A=0}}=1\\right)}{1 - P\\left(Y_{A=1,M_{A=0}}=1\\right)}}\\] and \\[\\text{OR}^\\text{TNDE} = \\frac{\\frac{P\\left(Y_{A=1,M_{A=0}}=1\\right)}{1 - P\\left(Y_{A=1,M_{A=0}}=1\\right)}}{\\frac{P\\left(Y_{A=0,M_{A=0}}=1\\right)}{1 - P\\left(Y_{A=0,M_{A=0}}=1\\right)}} \\quad \\text{and} \\quad \\text{OR}^\\text{PNIE} = \\frac{\\frac{P\\left(Y_{A=1,M_{A=1}}=1\\right)}{1 - P\\left(Y_{A=1,M_{A=1}}=1\\right)}}{\\frac{P\\left(Y_{A=1,M_{A=0}}=1\\right)}{1 - P\\left(Y_{A=1,M_{A=0}}=1\\right)}}.\\] If the outcome is rare, we have \\(P(Y=1) \\approx \\frac{P(Y=1)}{1-P(Y=1)}\\) so that, \\(\\text{OR}^{\\text{PNDE}}\\) AND \\(\\text{OR}^{\\text{TNIE}}\\) can be estimated using the logistic model of the outcome (equation (5.5)) and the logistic model of the mediator (equation (5.4)): \\[\\small \\text{OR}^\\text{PNDE} \\mid L(0), L(1) \\approx \\frac{\\text{exp}(\\hat{\\gamma}_A \\times 1) \\left[ 1 + \\text{exp}(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))\\right]}{ \\text{exp}(\\hat{\\gamma}_A \\times 0) \\left[ 1 + \\text{exp}(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))\\right]} \\] and \\[ \\scriptsize \\text{OR}^\\text{TNIE} \\mid L(0), L(1) \\approx \\frac{\\left[1 + \\text{exp}(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)) \\right] \\left[ 1 + \\text{exp}(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))\\right]}{ \\left[1 + \\text{exp}(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)) \\right] \\left[ 1 + \\text{exp}(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))\\right]} \\] Similarly, if the outcome is rare, \\(\\text{OR}^{\\text{TNDE}}\\) AND \\(\\text{OR}^{\\text{PNIE}}\\) can be estimated using the logistic regression models for the outcome and the mediator (equations (5.5) and (5.4)): \\[\\small \\text{OR}^\\text{TNDE} \\mid L(0), L(1) \\approx \\frac{\\text{exp}\\left(\\hat{\\gamma}_A \\times 1 \\right) \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right)\\right]}{ \\text{exp}\\left(\\hat{\\gamma}_A \\times 0 \\right) \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right)\\right]}\\] and \\[\\scriptsize \\text{OR}^\\text{PNIE} \\mid L(0), L(1) \\approx \\frac{\\left[1 + \\text{exp}\\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right) \\right] \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right)\\right]}{ \\left[1 + \\text{exp}\\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right) \\right] \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 + \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right)\\right]} \\] Conditional on participants for which \\(L(0)=0\\) and \\(L(1)=0\\), these expressions are simplified: \\[\\text{OR}^\\text{PNDE} \\Bigg| \\left(L(0) = 0, L(1) = 0\\right) \\approx \\frac{\\text{exp}\\left(\\hat{\\gamma}_A\\right) \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} + \\hat{\\beta}_0\\right)\\right]}{ \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\beta}_0 \\right)\\right]}\\] and \\[\\text{OR}^\\text{TNIE} \\Bigg| \\left(L(0)=0, L(1)=0\\right) \\approx \\frac{\\left[1 + \\text{exp}\\left(\\hat{\\beta}_0\\right) \\right] \\times \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} + \\hat{\\beta}_0 + \\hat{\\beta}_A\\right)\\right]}{ \\left[1 + \\text{exp}\\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right] \\times \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} + \\hat{\\beta}_0 \\right)\\right]} \\] Similarly, conditional on \\(L(0)=0\\) and \\(L(1)=0\\), \\[\\text{OR}^\\text{TNDE} \\Bigg| \\left(L(0)=0, L(1)=0\\right) \\approx \\frac{\\text{exp}\\left(\\hat{\\gamma}_A\\right) \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} + \\hat{\\beta}_0 + \\hat{\\beta}_A \\right)\\right]}{ \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\beta}_0 + \\hat{\\beta}_A \\right)\\right]}\\] \\[\\text{OR}^\\text{PNIE} \\Bigg| \\left(L(0)=0, L(1)=0\\right) \\approx \\frac{\\left[1 + \\text{exp}\\left(\\hat{\\beta}_0 \\right) \\right] \\times \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\beta}_0 + \\hat{\\beta}_A \\right)\\right]}{ \\left[1 + \\text{exp}\\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right] \\times \\left[ 1 + \\text{exp}\\left(\\hat{\\gamma}_M + \\hat{\\beta}_0 \\right)\\right]} \\] ### For a binary outcome, in the subgroup with L(0)=0 and L(1)=0 ## The PNDE and TNIE are (on the OR scale): trad_OR_PNDE_death &lt;- exp(gamma.A.d) * (1 + exp(gamma.M.d + gamma.AM.d + beta.0 )) / (1 + exp(gamma.M.d + beta.0)) trad_OR_PNDE_death # 1.448035 trad_OR_TNIE_death &lt;- (1 + exp(beta.0)) * (1 + exp(gamma.M.d + gamma.AM.d + beta.0 + beta.A)) / ((1 + exp(beta.0 + beta.A)) * (1 + exp(gamma.M.d + gamma.AM.d + beta.0))) trad_OR_TNIE_death # 1.050029 ## The TNDE and PNIE are (on the OR scale): trad_OR_TNDE_death &lt;- exp(gamma.A.d) * (1 + exp(gamma.M.d + gamma.AM.d + beta.0 + beta.A)) / (1 + exp(gamma.M.d + beta.0 + beta.A)) trad_OR_TNDE_death # 1.450344 trad_OR_PNIE_death &lt;- (1 + exp(beta.0)) * (1 + exp(gamma.M.d + beta.0 + beta.A)) / ((1 + exp(beta.0 + beta.A)) * (1 + exp(gamma.M.d + beta.0))) trad_OR_PNIE_death # 1.048358 The regmedint package (Regression-Based Causal Mediation Analysis with Interaction and Effect Modification Terms) can be used for two-way decomposition. Estimations of the CDE, PNDE, TNIE, TNDE and PNIE presented above can be obtained as we show in the following example. For continuous outcomes: library(regmedint) regmedint_cont &lt;- regmedint(data = df1_int, ## Variables yvar = &quot;Y_qol&quot;, # outcome variable avar = &quot;A0_ace&quot;, # exposure mvar = &quot;M_smoking&quot;, # mediator cvar = c(&quot;L0_male&quot;, # confounders &quot;L0_parent_low_educ_lv&quot;, &quot;L1&quot;), #eventvar = &quot;event&quot;, # only for survival outcome ## Values at which effects are evaluated a0 = 0, a1 = 1, m_cde = 0, # mediator level for the CDE c_cond = c(0,0,0), # covariate level ## Model types mreg = &quot;logistic&quot;, yreg = &quot;linear&quot;, ## Additional specification interaction = TRUE, casecontrol = FALSE) summary(regmedint_cont) #### Mediation analysis # est se Z p lower upper # cde -3.7152652 0.41600219 -8.930879 0.000000e+00 -4.5306145 -2.8999159 # pnde -4.8450888 0.35052810 -13.822255 0.000000e+00 -5.5321113 -4.1580663 # tnie -1.5011902 0.20821830 -7.209694 5.608847e-13 -1.9092905 -1.0930898 # tnde -5.4367728 0.34049175 -15.967414 0.000000e+00 -6.1041244 -4.7694213 # pnie -0.9095061 0.12266064 -7.414817 1.219025e-13 -1.1499166 -0.6690957 # te -6.3462790 0.38788368 -16.361294 0.000000e+00 -7.1065170 -5.5860409 # pm 0.2365465 0.02947624 8.024991 1.110223e-15 0.1787742 0.2943189 # note: te = total effect = (pnde + tnie) = (tnde + pnie) # pm = proportion mediated = tnie / te For binary outcomes: regmedint_bin &lt;- regmedint(data = df1_int, ## Variables yvar = &quot;Y_death&quot;, # outcome variable avar = &quot;A0_ace&quot;, # exposure mvar = &quot;M_smoking&quot;, # mediator cvar = c(&quot;L0_male&quot;, # confounders &quot;L0_parent_low_educ_lv&quot;, &quot;L1&quot;), #eventvar = &quot;event&quot;, # only for survival outcome ## Values at which effects are evaluated a0 = 0, a1 = 1, m_cde = 0, # mediator level for the CDE c_cond = c(0,0,0), # covariate level ## Model types mreg = &quot;logistic&quot;, yreg = &quot;logistic&quot;, ## Additional specification interaction = TRUE, casecontrol = FALSE) results.binary &lt;- summary(regmedint_bin) # taking the exponential of the estimations exp(results.binary$summary_myreg[c(&quot;cde&quot;,&quot;pnde&quot;,&quot;tnie&quot;,&quot;tnde&quot;,&quot;pnie&quot;,&quot;te&quot;), c(&quot;est&quot;,&quot;lower&quot;,&quot;upper&quot;)]) #### Mediation analysis # est lower upper # cde 1.442942 1.191195 1.747893 # pnde 1.448035 1.245470 1.683545 # tnie 1.050029 1.013842 1.087509 # tnde 1.450344 1.257042 1.673371 # pnie 1.048358 1.029285 1.067783 # te 1.520479 1.316954 1.755457 5.3 Three-way decomposition In order to carry-out a three-way decomposition with standard regressions, we will use the same models as for the two-way decomposition (equations (5.3), (5.5) and (5.4)). (VanderWeele 2013) defines: the \\(\\text{PNDE} = \\mathbb{E}\\left(Y_{A=1,M_{A=0}}) - \\mathbb{E}(Y_{A=0,M_{A=0}}\\right)\\), the \\(\\text{PNIE} = \\mathbb{E}\\left(Y_{A=0,M_{A=1}}) - \\mathbb{E}(Y_{A=0,M_{A=0}}\\right)\\), and the mediated interactive effect \\(\\text{MIE} = \\mathbb{E}\\left( \\left[ Y_{1,1} - Y_{1,0} - Y_{0,1} - Y_{0,0}\\right] \\times \\left[M_1 - M_0 \\right]\\right)\\). The sum of these 3 components is equal to the Average total effect (ATE). With a continuous outcome and a binary mediator, the PNDE and PNIE can be estimated as for the two-way decomposition (section 5.2.2) using the linear regression of the outcome (equation (5.3)) and the logistic regression of the mediator (equation (5.4)). The mediated interactive effect can be estimated using the same equations (5.3) and (5.4), by: \\[ \\scriptsize \\text{MIE} \\mid (L(0), L(1)) = \\hat{\\gamma}_{A \\ast M} \\left[ \\frac{\\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + \\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))} - \\frac{\\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + \\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\right]\\] Conditional on participants for which \\(L(0)=0\\) and \\(L(1)=0\\), the expression is simplified: \\[\\text{MIE} \\Big| (L(0)=0, L(1)=0) = \\hat{\\gamma}_{A \\ast M} \\left[ \\frac{\\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A )}{1 + \\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A )} - \\frac{\\exp (\\hat{\\beta}_0)}{1 + \\exp (\\hat{\\beta}_0)}\\right]\\] ### For a continuous outcome, in the subgroup with L(0)=0 and L(1)=0 ## The PNDE is: trad_PNDE_qol &lt;- gamma.A.q + gamma.AM.q * (exp(beta.0)) / (1 + exp(beta.0)) trad_PNDE_qol # -4.845089 ## The PNIE is: trad_PNIE_qol &lt;- gamma.M.q * (exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) - exp(beta.0) / (1 + exp(beta.0))) trad_PNIE_qol # -0.9095061 ## The MIE is: trad_MIE_qol &lt;- gamma.AM.q * (exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) - exp(beta.0) / (1 + exp(beta.0))) trad_MIE_qol # -0.591684 With a binary outcome, the total effect, the direct and indirect effects can be expressed using risk ratios or odds ratios. In order to express the mediated interactive effect, (VanderWeele 2013) suggested decomposing the excess relative risk of the total effect \\((\\text{RR}^{\\text{TE}}-1)\\), which enables the expression of the mediated interactive effect on an additive scale. On the difference scale, the total effect can be decomposed as the sum of the PNDE, the PNIE and the MIE: \\[\\begin{array}{rl} \\mathbb{E}(Y_1) - \\mathbb{E}(Y_0) = &amp; \\left[ \\mathbb{E}\\left(Y_{1M_0}\\right) - \\mathbb{E}\\left(Y_{0M_0}\\right) \\right] + \\left[ \\mathbb{E}\\left(Y_{0M_1}\\right) - \\mathbb{E}\\left(Y_{0M_0}\\right) \\right] \\\\ &amp; + \\left[ \\left[ \\mathbb{E}\\left(Y_{1M_1}\\right) - \\mathbb{E}\\left(Y_{1M_0}\\right) \\right] - \\left[ \\mathbb{E}\\left(Y_{0M_1}\\right) - \\mathbb{E}\\left(Y_{0M_0}\\right) \\right] \\right] \\\\ = &amp; \\text{PNDE + PNIE} \\\\ &amp; \\text{ + MIE} \\end{array}\\] Dividing by \\(\\mathbb{E}(Y_0) = \\mathbb{E}\\left(Y_{0M_0}\\right)\\), we obtain the excess relative risk of the total effect decomposition: \\[\\begin{array}{rl} \\frac{\\mathbb{E}(Y_1)}{\\mathbb{E}(Y_0)}-1 = &amp; \\left[ \\frac{\\mathbb{E}\\left( Y_{1M_0}\\right)}{\\mathbb{E}\\left( Y_{0M_0}\\right)} - 1 \\right] + \\left[ \\frac{\\mathbb{E}\\left( Y_{0M_1}\\right)}{\\mathbb{E}\\left( Y_{0M_0}\\right)} - 1 \\right] \\\\ &amp; + \\left[ \\frac{\\mathbb{E}\\left( Y_{1M_1}\\right)}{\\mathbb{E}\\left( Y_{0M_0}\\right)} - \\frac{\\mathbb{E}\\left( Y_{1M_0}\\right)}{\\mathbb{E}\\left( Y_{0M_0}\\right)} - \\frac{\\mathbb{E}\\left( Y_{0M_1}\\right)}{\\mathbb{E}\\left( Y_{0M_0}\\right)} + 1 \\right] \\end{array}\\] where the first component is the excess relative risk due to the PNDE, the second component is the excess relative risk due to the PNIE and the third component is the mediated excess relative risk due to interaction. If the outcome is rare, relative risks are approximately equal to odds ratios, and the 3 components of the excess relative risk can be estimated using the logistic regression of the outcome (equation (5.5)) and the logistic regression of the mediator (equation (5.4)). The component of the excess relative risk due to the PNDE is approximately equal to: \\[\\scriptsize \\text{RR}^\\text{PNDE} - 1 \\approx \\frac{ \\exp \\left[ \\hat{\\gamma}_A (1 - 0) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 \\right) \\right]}{ \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\right] } - 1 \\] The component of the excess relative risk due to the PNIE is approximately equal to: \\[\\scriptsize \\text{RR}^\\text{PNIE} - 1 \\approx \\frac{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\right]}{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\right] } - 1 \\] The component of the excess relative risk due to the mediated interactive effect is approximately equal to: \\[\\small \\begin{array}{rl} \\text{RERI}_{mediated} \\approx &amp; \\frac{\\exp \\left[ \\hat{\\gamma}_A (1 - 0)\\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1\\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0\\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]} \\\\ &amp; - \\frac{\\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0\\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]} \\\\ &amp; - \\frac{\\exp \\left[ \\hat{\\gamma}_A (1 - 0)\\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right)\\right]} + 1 \\end{array}\\] Conditional on participants for which \\(L(0)=0\\) and \\(L(1)=0\\), these expressions are simplified: \\[\\text{RR}^\\text{PNDE} - 1 \\approx \\frac{ \\exp \\left( \\hat{\\gamma}_A \\right) \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\right]}{ \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\gamma}_M \\right) \\right] } - 1 \\] \\[\\text{RR}^\\text{PNIE} - 1 \\approx \\frac{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A + \\hat{\\gamma}_M \\right) \\right]}{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\gamma}_M \\right) \\right] } - 1 \\] and \\[\\begin{array}{rl} \\text{RERI}_\\text{mediated} \\approx &amp; \\frac{ \\exp \\left( \\hat{\\gamma}_A \\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right]} - \\frac{\\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A + \\hat{\\gamma}_M \\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right]} \\\\ &amp; - \\frac{ \\exp \\left( \\hat{\\gamma}_A \\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right]} + 1 \\end{array}\\] ### For a binary outcome, in the subgroup with L(0)=0 and L(1)=0 ## The excess relative risk is 52.3% (calculated from the OR of the total effect) 1.523254 - 1 # 0.523254 ## The excess relative risk is decomposed into 3 components: ## The component of the excess relative risk due to PNDE is: comp_PNDE_death &lt;- exp(gamma.A.d) * (1 + exp(beta.0 + gamma.M.d + gamma.AM.d)) / (1 + exp(beta.0 + gamma.M.d)) - 1 comp_PNDE_death # 0.4480347 ## The component of the excess relative risk due to PNIE is: comp_PNIE_death &lt;- (1 + exp(beta.0)) * (1 + exp(beta.0 + beta.A + gamma.M.d)) / ((1 + exp(beta.0 + beta.A)) * (1 + exp(beta.0 + gamma.M.d))) - 1 comp_PNIE_death # 0.04835753 ## The component of the excess relative risk due to the mediated interactive ## effect is: comp_MIE_qol &lt;- exp(gamma.A.d) * (1 + exp(beta.0 + beta.A + gamma.M.d + gamma.AM.d)) * (1 + exp(beta.0)) / ((1 + exp(beta.0 + gamma.M.d)) * (1 + exp(beta.0 + beta.A))) - (1 + exp(beta.0 + beta.A + gamma.M.d)) * (1 + exp(beta.0)) / ((1 + exp(beta.0 + gamma.M.d)) * (1 + exp(beta.0 + beta.A))) - exp(gamma.A.d) * (1 + exp(beta.0 + gamma.M.d + gamma.AM.d)) / (1 + exp(beta.0 + gamma.M.d)) + 1 comp_MIE_qol # 0.02408674 In this example, the excess relative risk of the exposure to adverse childhood (ACE) exposure is \\(\\approx 52.3\\%\\), and of this excess relative risk…: \\(\\approx 44.8\\%\\) is attributable to the PNDE of ACE, \\(\\approx 4.8\\%\\) is attributable to the PNIE of ACE through smoking, \\(\\approx 2.4\\%\\) is attributable to the mediated interactive effect between ACE and smoking. Note: in this simulated data, the probability of death is around \\(20\\%\\), so that the requirement of a rare outcome is not really fulfilled (usually, we would consider \\(&lt; 10\\%\\) to be acceptable). 5.4 Four-way decomposition The same models as for the two-way and three-way decomposition (equations (5.3), (5.5) and (5.4)) will be used in order to apply the four-way decomposition. (VanderWeele 2014) defines: the \\(\\text{CDE}_{M=0} = \\mathbb{E}\\left( Y_{1,0}\\right) - \\mathbb{E}\\left(Y_{0,0} \\right)\\), the mediated interaction effect \\(\\text{MIE} = \\mathbb{E}\\left( \\left[ Y_{1,1} - Y_{1,0} - Y_{0,1} - Y_{0,0}\\right] \\times \\left[M_1 - M_0 \\right]\\right)\\), the reference interaction effect \\(\\text{RIE} = \\mathbb{E}\\left( \\left[Y_{1,1} - Y_{1,0} - Y_{0,1} - Y_{0,0}\\right] \\times M_0 \\right)\\), and the \\(\\text{PNIE} = \\mathbb{E}\\left(Y_{A=0,M_{A=1}}) - \\mathbb{E}(Y_{A=0,M_{A=0}} \\right)\\). The sum of these 4 components is equal to the Average total effect (ATE), and if the exposure affects the outcome, then at least one of these 4 components should be non-null. With a continuous outcome and a binary mediator, the \\(\\text{CDE}_{M=0}\\) and \\(\\text{PNIE}\\) can be estimated as for the two-way decomposition (sections 5.2.1 and 5.2.2), and the \\(\\text{MIE}\\) can be estimated as for the three-way decomposition (section 5.3), using the linear regression of the outcome (equation (5.3)) and the logistic regression of the mediator (equation (5.4)). \\[\\text{CDE}_{M=0} \\mid \\left(L(0),L(1) \\right) = \\hat{\\gamma}_A + \\hat{\\gamma}_{A \\ast M} \\times 0\\] \\[\\scriptsize \\text{PNIE} \\mid L(0), L(1) = \\left( \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\left[ \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))} - \\frac{exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + exp(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\right]\\] and \\[ \\scriptsize \\text{MIE} \\mid (L(0), L(1)) = \\hat{\\gamma}_{A \\ast M} \\left[ \\frac{\\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + \\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))} - \\frac{\\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + \\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}\\right]\\] The RIE can be estimated by: \\[\\scriptsize \\text{RIE} \\mid (L(0), L(1)) = \\hat{\\gamma}_{A \\ast M} \\left[ \\frac{\\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))}{1 + \\exp (\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1))} - 0 \\right]\\] ### For a continuous outcome, in the subgroup with L(0)=0 and L(1)=0 ## The CDE_(M=0) is: trad_CDE_qol_m0 &lt;- gamma.A.q + gamma.AM.q * 0 trad_CDE_qol_m0 # -3.715265 ## The PNIE is: trad_PNIE_qol &lt;- gamma.M.q * (exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) - exp(beta.0) / (1 + exp(beta.0))) trad_PNIE_qol # -0.9095061 ## The MIE is: trad_MIE_qol &lt;- gamma.AM.q * (exp(beta.0 + beta.A) / (1 + exp(beta.0 + beta.A)) - exp(beta.0) / (1 + exp(beta.0))) trad_MIE_qol # -0.591684 ## The RIE is: trad_RIE_qol &lt;- gamma.AM.q * (exp(beta.0)) / (1 + exp(beta.0)) trad_RIE_qol # -1.129824 With a binary outcome and a binary mediator, (VanderWeele 2014) suggested decomposing the excess relative risk of the total effect \\((\\text{RR}^{\\text{TE}}-1)\\) (as for the 3-way decomposition), which enables the expression of the MIE and the RIE on an additive scale. If the outcome is rare, The component of the excess relative risk due to the CDE is approximately equal to: \\[\\small \\begin{array}{rl} \\frac{\\mathbb{E}\\left( Y_{0,0} \\mid L(0), L(1) \\right)}{\\mathbb{E}\\left( Y_0 \\mid L(0), L(1) \\right)} \\left(\\frac{\\mathbb{E}\\left(Y_{1,0} \\mid L(0),L(1) \\right)}{\\mathbb{E}\\left(Y_{0,0} \\mid L(0),L(1)\\right)} - 1\\right) \\approx &amp; \\frac{\\exp \\left( \\hat{\\gamma}_A(1-0) + \\hat{\\gamma}_M \\times 0 + \\hat{\\gamma}_{A \\ast M} \\times 1 \\times 0 \\right) \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(0)}^\\prime L(1) \\right) \\right]}{1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(0)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0\\right)} \\\\ &amp; - \\frac{\\exp \\left( \\hat{\\gamma}_M \\times 0 + \\hat{\\gamma}_{A \\ast M} \\times 0 \\times 0\\right) \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(0)}^\\prime L(1) \\right) \\right]}{1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(0)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right)} \\end{array}\\] The component of the excess relative risk due to the PNIE is approximately equal to: \\[\\scriptsize \\text{RR}^\\text{PNIE} - 1 \\approx \\frac{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\right]}{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) \\right] } - 1 \\] The component of the excess relative risk due to the mediated interactive effect is approximately equal to: \\[\\small \\begin{array}{rl} \\text{RERI}_{mediated} \\approx &amp; \\frac{\\exp \\left[ \\hat{\\gamma}_A (1 - 0)\\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1\\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1)\\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0\\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]} \\\\ &amp; - \\frac{\\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0\\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 1 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]} \\\\ &amp; - \\frac{\\exp \\left[ \\hat{\\gamma}_A (1 - 0)\\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1 \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right)\\right]} + 1 \\end{array}\\] and the component of the excess relative risk due to the reference interaction effect is approximately equal to: \\[ \\begin{array}{rl} \\text{RERI}_\\text{ref} \\approx &amp; \\frac{\\exp \\left[ \\hat{\\gamma}_A (1 - 0)\\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 1\\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0\\right)\\right] } - 1 \\\\ &amp; - \\frac{\\exp \\left[ \\hat{\\gamma}_A (1 - 0) + \\hat{\\gamma}_M \\times 0 + \\hat{\\gamma}_{A \\ast M} 1 \\times 0 \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]}{ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right)} \\\\ &amp; + \\frac{\\exp \\left( \\hat{\\gamma}_M \\times 0 + \\hat{\\gamma}_{A \\ast M} \\times 0 \\times 0 \\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) \\right) \\right]}{ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\times 0 + \\hat{\\beta}_{L(0)}^\\prime L(0) + \\hat{\\beta}_{L(1)}^\\prime L(1) + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\times 0 \\right) } \\end{array}\\] Conditional on participants for which \\(L(0)=0\\) and \\(L(1)=0\\), these expressions are simplified: The component of the excess relative risk due to the CDE is approximately equal to: \\[ \\approx \\frac{\\exp \\left( \\hat{\\gamma}_A \\right) \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 \\right) \\right]}{1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)} - \\frac{ \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 \\right) \\right]}{1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)}\\] The component of the excess relative risk due to the PNIE is approximately equal to: \\[\\text{RR}^\\text{PNIE} - 1 \\approx \\frac{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A + \\hat{\\gamma}_M \\right) \\right]}{\\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right] \\left[ 1 + \\exp \\left( \\hat{\\beta}_0 + \\hat{\\gamma}_M \\right) \\right] } - 1 \\] The component of the excess relative risk due to the mediated interactive effect is approximately equal to: \\[ \\begin{array}{rl} \\text{RERI}_{mediated} \\approx &amp; \\frac{\\exp \\left( \\hat{\\gamma}_A \\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right]} - \\frac{\\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A + \\hat{\\gamma}_M \\right) \\right] \\left[1 + \\exp \\left(\\hat{\\beta}_0 \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right] \\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_A \\right) \\right]} \\\\ &amp; - \\frac{\\exp \\left( \\hat{\\gamma}_A \\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right]} + 1 \\end{array} \\] and the component of the excess relative risk due to the reference interaction effect is approximately equal to: \\[\\small \\text{RERI}_\\text{ref} \\approx \\frac{\\exp \\left( \\hat{\\gamma}_A\\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M + \\hat{\\gamma}_{A \\ast M} \\right) \\right]}{\\left[ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)\\right] } - 1 - \\frac{\\exp \\left( \\hat{\\gamma}_A \\right) \\left[1 + \\exp \\left(\\hat{\\beta}_0 \\right) \\right]}{ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right)} + \\frac{ \\left[1 + \\exp \\left(\\hat{\\beta}_0 \\right) \\right]}{ 1 + \\exp \\left(\\hat{\\beta}_0 + \\hat{\\gamma}_M \\right) } \\] ### For a binary outcome, in the subgroup with L(0)=0 and L(1)=0 ## The excess relative risk is 52.3% (calculated from the OR of the total effect) 1.523254 - 1 # 0.523254 ## The excess relative risk is decomposed into 4 components: ## The component of the excess relative risk due to the CDE(M=0) is: comp_CDE_death_m0 &lt;- exp(gamma.A.d) * (1 + exp(beta.0)) / (1 + exp(beta.0 + gamma.M.d)) - (1 + exp(beta.0)) / (1 + exp(beta.0 + gamma.M.d)) comp_CDE_death_m0 # 0.402041 ## The component of the excess relative risk due to the PNIE is: comp_PNIE_death &lt;- (1 + exp(beta.0)) * (1 + exp(beta.0 + beta.A + gamma.M.d)) / ((1 + exp(beta.0 + beta.A)) * (1 + exp(beta.0 + gamma.M.d))) - 1 comp_PNIE_death # 0.04835753 ## The component of the excess relative risk due to the MIE is: comp_MIE_death &lt;- exp(gamma.A.d) * (1 + exp(beta.0 + beta.A + gamma.M.d + gamma.AM.d)) * (1 + exp(beta.0)) / ((1 + exp(beta.0 + gamma.M.d)) * (1 + exp(beta.0 + beta.A))) - (1 + exp(beta.0 + beta.A + gamma.M.d)) * (1 + exp(beta.0)) / ((1 + exp(beta.0 + gamma.M.d)) * (1 + exp(beta.0 + beta.A))) - exp(gamma.A.d) * (1 + exp(beta.0 + gamma.M.d + gamma.AM.d)) / (1 + exp(beta.0 + gamma.M.d)) + 1 comp_MIE_death # 0.02408674 ## The component of the excess relative risk due to the RIE is: comp_RIE_death &lt;- exp(gamma.A.d) * (1 + exp(beta.0 + gamma.M.d + gamma.AM.d)) / (1 + exp(beta.0 + gamma.M.d)) - 1 - exp(gamma.A.d) * (1 + exp(beta.0)) / (1 + exp(beta.0 + gamma.M.d)) + (1 + exp(beta.0)) / (1 + exp(beta.0 + gamma.M.d)) comp_RIE_death # 0.04599376 In this example, the excess relative risk of the exposure to adverse childhood (ACE) exposure is \\(\\approx 52.3\\%\\), and of this excess relative risk…: \\(\\approx 40.2\\%\\) is attributable to the CDE of ACE, \\(\\approx 4.8\\%\\) is attributable to the PNIE of ACE through smoking, \\(\\approx 2.4\\%\\) is attributable to the mediated interactive effect between ACE and smoking. and \\(\\approx 4.6\\%\\) is attributable to the (ACE \\(\\ast\\) smoking) reference interactive effect. Note: in this simulated data, the probability of death is around \\(20\\%\\), so that the requirement of a rare outcome is not really fulfilled (usually, we would consider \\(&lt; 10\\%\\) to be acceptable). R package for 3-way and 4-way decomposition The CMAverse R package (a suite of functions for causal mediation analysis) can be used for 3-way and 4-way decomposition. Estimations of the CDE(M=0), PNIE, MIE and INTref presented above can be obtained as we show in the following example. For continuous outcomes: library(CMAverse) ### For the continuous outcome ## Closed-form parameter function estimation and delta method inferece res_rb_param_delta &lt;- cmest(data = df1_int, model = &quot;rb&quot;, # for &quot;regression based&quot; (rb) approach outcome = &quot;Y_qol&quot;, # outcome variable exposure = &quot;A0_ace&quot;, # exposure variable mediator = &quot;M_smoking&quot;, # mediator basec = c(&quot;L0_male&quot;, # confounders &quot;L0_parent_low_educ_lv&quot;, &quot;L1&quot;), EMint = TRUE, # exposures*mediator interaction mreg = list(&quot;logistic&quot;), # model of the mediator yreg = &quot;linear&quot;, # model of the outcome astar = 0, a = 1, mval = list(0), basecval = list(0,0,0), # covariate level estimation = &quot;paramfunc&quot;, # closed-form parameter # function estimation inference = &quot;delta&quot;) # IC95% : delta method summary(res_rb_param_delta) # Closed-form parameter function estimation with # delta method standard errors, confidence intervals and p-values # # Estimate Std.error 95% CIL 95% CIU P.val # cde -3.71527 0.41600 -4.53061 -2.900 &lt; 2e-16 *** CDE(M=0) # pnde -4.84509 0.35053 -5.53211 -4.158 &lt; 2e-16 *** # tnde -5.43677 0.34049 -6.10412 -4.769 &lt; 2e-16 *** # pnie -0.90951 0.12266 -1.14992 -0.669 1.22e-13 *** PNIE # tnie -1.50119 0.20822 -1.90929 -1.093 5.61e-13 *** # te -6.34628 0.38788 -7.10652 -5.586 &lt; 2e-16 *** # intref -1.12982 0.13824 -1.40076 -0.859 2.22e-16 *** INTref # intmed -0.59168 0.10398 -0.79547 -0.388 1.27e-08 *** MIE # cde(prop) 0.58542 0.04505 0.49712 0.674 &lt; 2e-16 *** # intref(prop) 0.17803 0.02560 0.12786 0.228 3.51e-12 *** # intmed(prop) 0.09323 0.01586 0.06216 0.124 4.11e-09 *** # pnie(prop) 0.14331 0.01655 0.11087 0.176 &lt; 2e-16 *** # pm 0.23655 0.02948 0.17877 0.294 1.11e-15 *** # int 0.27126 0.03780 0.19717 0.345 7.20e-13 *** # pe 0.41458 0.04505 0.32627 0.503 &lt; 2e-16 *** # --- # Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 # for the 3-way decomposition, the PNDE, PNIE, and MIE are given by: data.frame(&quot;Estimate&quot; = res_rb_param_delta$effect.pe, &quot;lower95CI&quot; = res_rb_param_delta$effect.ci.low, &quot;upper95CI&quot; = res_rb_param_delta$effect.ci.high, &quot;P.value&quot; = res_rb_param_delta$effect.pval)[c(&quot;pnde&quot;,&quot;pnie&quot;, &quot;intmed&quot;),] # Estimate lower95CI upper95CI P.value # pnde -4.8450888 -5.5321113 -4.1580663 0.000000e+00 # pnie -0.9095061 -1.1499166 -0.6690957 1.219025e-13 # intmed -0.5916840 -0.7954739 -0.3878941 1.266206e-08 # for the 4-way decomposition, the CDE(M=0), Intref, MIE and PNIE are given by: data.frame(&quot;Estimate&quot; = res_rb_param_delta$effect.pe, &quot;lower95CI&quot; = res_rb_param_delta$effect.ci.low, &quot;upper95CI&quot; = res_rb_param_delta$effect.ci.high, &quot;P.value&quot; = res_rb_param_delta$effect.pval)[c(&quot;cde&quot;,&quot;intref&quot;,&quot;intmed&quot;,&quot;pnie&quot;),] # Estimate lower95CI upper95CI P.value # cde -3.7152652 -4.5306145 -2.8999159 0.000000e+00 # intref -1.1298236 -1.4007600 -0.8588871 2.220446e-16 # intmed -0.5916840 -0.7954739 -0.3878941 1.266206e-08 # pnie -0.9095061 -1.1499166 -0.6690957 1.219025e-13 For binary outcomes: ### For the binary outcome ## Closed-form parameter function estimation and delta method inferece res_rb_param_delta &lt;- cmest(data = df1_int, model = &quot;rb&quot;, # for &quot;regression based&quot; (rb) approach outcome = &quot;Y_death&quot;, # outcome variable exposure = &quot;A0_ace&quot;, # exposure variable mediator = &quot;M_smoking&quot;, # mediator basec = c(&quot;L0_male&quot;, # confounders &quot;L0_parent_low_educ_lv&quot;, &quot;L1&quot;), EMint = TRUE, # exposures*mediator interaction mreg = list(&quot;logistic&quot;), # model of the mediator yreg = &quot;logistic&quot;, # model of the outcome astar = 0, a = 1, mval = list(0), basecval = list(0,0,0), # covariate level estimation = &quot;paramfunc&quot;, # closed-form parameter # function estimation inference = &quot;delta&quot;) # IC95% : delta method summary(res_rb_param_delta) # Closed-form parameter function estimation with # delta method standard errors, confidence intervals and p-values # # Estimate Std.error 95% CIL 95% CIU P.val # Rcde 1.44294 0.14115 1.19120 1.748 0.000178 *** # Rpnde 1.44803 0.11133 1.24547 1.684 1.47e-06 *** # Rtnde 1.45034 0.10585 1.25704 1.673 3.50e-07 *** # Rpnie 1.04836 0.00982 1.02929 1.068 4.62e-07 *** # Rtnie 1.05003 0.01879 1.01384 1.088 0.006368 ** # Rte 1.52048 0.11148 1.31695 1.755 1.10e-08 *** # ERcde 0.40204 0.12699 0.15315 0.651 0.001546 ** CDE(M=0) # ERintref 0.04599 0.04821 -0.04850 0.140 0.340093 INTref # ERintmed 0.02409 0.02543 -0.02576 0.074 0.343607 MIE # ERpnie 0.04836 0.00982 0.02911 0.068 8.47e-07 *** PNIE # ERcde(prop) 0.77244 0.14282 0.49252 1.052 6.36e-08 *** # ERintref(prop) 0.08837 0.09311 -0.09413 0.271 0.342600 # ERintmed(prop) 0.04628 0.04901 -0.04978 0.142 0.345058 # ERpnie(prop) 0.09291 0.02602 0.04192 0.144 0.000356 *** # pm 0.13919 0.05498 0.03142 0.247 0.011359 * # int 0.13465 0.14186 -0.14340 0.413 0.342562 # pe 0.22756 0.14282 -0.05237 0.507 0.111092 # --- # Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 # for the 3-way decomposition, the excess relative risk due to # the PNDE, PNIE and MIE are given by: data.frame(&quot;Estimate&quot; = res_rb_param_delta$effect.pe - 1, &quot;lower95CI&quot; = res_rb_param_delta$effect.ci.low - 1, &quot;upper95CI&quot; = res_rb_param_delta$effect.ci.high - 1)[c(&quot;Rpnde&quot;),] # Estimate lower95CI upper95CI # Rpnde 0.4480347 0.2454699 0.6835449 # and data.frame(&quot;Estimate&quot; = res_rb_param_delta$effect.pe, &quot;lower95CI&quot; = res_rb_param_delta$effect.ci.low, &quot;upper95CI&quot; = res_rb_param_delta$effect.ci.high, &quot;P.value&quot; = res_rb_param_delta$effect.pval)[c(&quot;ERpnie&quot;, &quot;ERintmed&quot;),] # Estimate lower95CI upper95CI P.value # ERpnie 0.04835753 0.02910970 0.06760535 8.473169e-07 # ERintmed 0.02408674 -0.02576124 0.07393472 3.436070e-01 # for the 4-way decomposition, the CDE(M=0), the excess relative risk due to # CDE(M=0), Intref, MIE and PNIE are given by: data.frame(&quot;Estimate&quot; = res_rb_param_delta$effect.pe, &quot;lower95CI&quot; = res_rb_param_delta$effect.ci.low, &quot;upper95CI&quot; = res_rb_param_delta$effect.ci.high, &quot;P.value&quot; = res_rb_param_delta$effect.pval)[c(&quot;ERcde&quot;,&quot;ERintref&quot;,&quot;ERintmed&quot;,&quot;ERpnie&quot;),] # Estimate lower95CI upper95CI P.value # ERcde 0.40204098 0.15315072 0.65093124 1.545523e-03 # ERintref 0.04599376 -0.04850084 0.14048835 3.400930e-01 # ERintmed 0.02408674 -0.02576124 0.07393472 3.436070e-01 # ERpnie 0.04835753 0.02910970 0.06760535 8.473169e-07 References "],["ChapGcomp.html", "Chapter 6 G-computation 6.1 Estimation of the Average Total Effect (ATE) 6.2 Estimation of Controlled Direct Effects (CDE)", " Chapter 6 G-computation If we make the assumption that the intermediate confounder \\(L(1)\\) of the \\(M-Y\\) relationship is affected by the exposure \\(A\\) (Causal model 2), it is necessary to use other methods than traditional regressions models. To illustrate g-computation estimators, we will use the df2_int.csv data set, which was generated from a system corresponding to this assumption. Moreover, we will assume that their is an \\(A \\star M\\) interaction effect on the outcome. G-computation can be used for the estimation of the total effect and two-way decomposition (CDE, marginal and conditional randomized direct and indirect effects). 6.1 Estimation of the Average Total Effect (ATE) The following steps describe the implementation of the g-computation estimator of the average total effect \\(\\text{ATE} = \\mathbb{E}(Y_{A=1}) - \\mathbb{E}(Y_{A=0})\\): Fit a logistic or a linear regression to estimate \\(\\overline{Q} = \\mathbb{E}(Y \\mid A, L(0))\\) Use this estimate to predict an outcome for each subject \\(\\hat{\\overline{Q}}(A=0)_i\\) and \\(\\hat{\\overline{Q}}(A=1)_i\\), by evaluating the regression fit \\(\\overline{Q}\\) at \\(A=0\\) and \\(A=1\\) respectively Plug the predicted outcomes in the g-formula and use the sample mean to estimate \\(\\Psi_{ATE}\\) \\[\\begin{equation} \\hat{\\Psi}^{\\text{ATE}}_{\\text{gcomp}} = \\frac{1}{n} \\sum_{i=1}^n \\left[ \\hat{\\overline{Q}}(A=1)_i - \\hat{\\overline{Q}}(A=0)_i \\right] \\end{equation}\\] For continuous outcomes, \\(\\overline{Q}(A=a)\\) functions can be estimated using linear regressions. For binary outcomes, they can be estimated using logistic regressions. ## 1. Estimate Qbar Q.tot.death &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df2_int) Q.tot.qol &lt;- glm(Y_qol ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;gaussian&quot;, data = df2_int) ## 2. Predict an outcome for each subject, setting A=0 and A=1 # prepare data sets used to predict the outcome under the counterfactual # scenarios setting A=0 and A=1 data.A1 &lt;- data.A0 &lt;- df2_int data.A1$A0_ace &lt;- 1 data.A0$A0_ace &lt;- 0 # predict values Y1.death.pred &lt;- predict(Q.tot.death, newdata = data.A1, type = &quot;response&quot;) Y0.death.pred &lt;- predict(Q.tot.death, newdata = data.A0, type = &quot;response&quot;) Y1.qol.pred &lt;- predict(Q.tot.qol, newdata = data.A1, type = &quot;response&quot;) Y0.qol.pred &lt;- predict(Q.tot.qol, newdata = data.A0, type = &quot;response&quot;) ## 3. Plug the predicted outcome in the gformula and use the sample mean ## to estimate the ATE ATE.death.gcomp &lt;- mean(Y1.death.pred - Y0.death.pred) ATE.death.gcomp # [1] 0.08270821 ATE.qol.gcomp &lt;- mean(Y1.qol.pred - Y0.qol.pred) ATE.qol.gcomp # [1] -8.360691 A 95% confidence interval can be estimated applying a bootstrap procedure. An example is given in the following code. set.seed(1234) B &lt;- 2000 bootstrap.estimates &lt;- data.frame(matrix(NA, nrow = B, ncol = 2)) colnames(bootstrap.estimates) &lt;- c(&quot;boot.death.est&quot;, &quot;boot.qol.est&quot;) for (b in 1:B){ # sample the indices 1 to n with replacement bootIndices &lt;- sample(1:nrow(df2_int), replace=T) bootData &lt;- df2_int[bootIndices,] if ( round(b/100, 0) == b/100 ) print(paste0(&quot;bootstrap number &quot;,b)) Q.tot.death &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = bootData) Q.tot.qol &lt;- glm(Y_qol ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;gaussian&quot;, data = bootData) boot.A.1 &lt;- boot.A.0 &lt;- bootData boot.A.1$A0_ace &lt;- 1 boot.A.0$A0_ace &lt;- 0 Y1.death.boot &lt;- predict(Q.tot.death, newdata = boot.A.1, type = &quot;response&quot;) Y0.death.boot &lt;- predict(Q.tot.death, newdata = boot.A.0, type = &quot;response&quot;) Y1.qol.boot &lt;- predict(Q.tot.qol, newdata = boot.A.1, type = &quot;response&quot;) Y0.qol.boot &lt;- predict(Q.tot.qol, newdata = boot.A.0, type = &quot;response&quot;) bootstrap.estimates[b,&quot;boot.death.est&quot;] &lt;- mean(Y1.death.boot - Y0.death.boot) bootstrap.estimates[b,&quot;boot.qol.est&quot;] &lt;- mean(Y1.qol.boot - Y0.qol.boot) } IC95.ATE.death &lt;- c(ATE.death.gcomp - qnorm(0.975)*sd(bootstrap.estimates[,&quot;boot.death.est&quot;]), ATE.death.gcomp + qnorm(0.975)*sd(bootstrap.estimates[,&quot;boot.death.est&quot;]) ) IC95.ATE.death # [1] 0.05571017 0.10970624 IC95.ATE.qol &lt;- c(ATE.qol.gcomp - qnorm(0.975)*sd(bootstrap.estimates[,&quot;boot.qol.est&quot;]), ATE.qol.gcomp + qnorm(0.975)*sd(bootstrap.estimates[,&quot;boot.qol.est&quot;]) ) IC95.ATE.qol # [1] -9.156051 -7.565331 6.2 Estimation of Controlled Direct Effects (CDE) The controlled direct effect \\(\\Psi^{\\text{CDE}_m} = \\mathbb{E}(Y_{A=1,M=m}) - \\mathbb{E}(Y_{A=0,M=m})\\) is the difference between the mean outcome had the whole population been exposed to ACE (setting \\(A=1\\)), compared to the mean outcome had the whole population been unexposed (setting \\(A=0\\)), while keeping the mediator equal to a constant given value (\\(M=m\\)) in both scenarios. The g-formula for a CDE (\\(\\mathbb{E}(Y_{A=a^\\prime,M=m})\\)) is more complex than for the average total effect, and the simple substitution approach described previously is less convenient to apply: \\(\\mathbb{E}(Y_{A=a^\\prime,M=m}) = \\sum_{l(0),l(1)} \\left[ \\mathbb{E}\\left(Y \\mid m, l(1), a^\\prime, l(0) \\right) \\times P\\right( L(1)=l(1) | a^\\prime,l(0) \\left) \\right] \\times P\\left( L(0)=l(0) \\right)\\) In our simple example with a binary exposure \\(A\\), a binary mediator \\(M\\) and a binary intermediate confounder \\(L(1)\\), it is still possible to apply the substitution approach (corresponding to a non-parametric g-computation estimation) by estimating the following components of the g-formula: \\(\\overline{Q}_Y(A,L(1),M)=\\mathbb{E}\\left(Y \\mid L(0), A,L(1), M \\right)\\), and \\(\\overline{Q}_{L(1)}(A)=P\\left(L(1)=1) \\mid A, l(0)\\right)\\) We can then generate predicted outcomes from these 3 models for each subject in the data set, and obtain a non-parametric maximum likelihood estimator (NPMLE) of the CDE using the empirical mean: \\[\\scriptsize \\begin{array}{r l} \\Psi^{\\text{CDE}_m}_{\\text{NPMLE}} = \\frac{1}{n}\\sum &amp; \\left[\\hat{\\overline{Q}}_Y(A=1,L(1)=1,M=m) \\times \\hat{\\overline{Q}}_{L(1)}(A=1) + \\hat{\\overline{Q}}_Y(A=1,L(1)=0,M=m) \\times (1 - \\hat{\\overline{Q}}_{L(1)}(A=1))\\right]\\\\ &amp; - \\left[\\hat{\\overline{Q}}_Y(A=0,L(1)=1,M=m) \\times \\hat{\\overline{Q}}_{L(1)}(A=0) + \\hat{\\overline{Q}}_Y(A=0,L(1)=0,M=m) \\times (1 - \\hat{\\overline{Q}}_{L(1)}(A=0))\\right] \\end{array}\\] However NPMLE is tedious with high-dimensional intermediate confounders \\(L(1)\\) or if mediators is repeated over time. In that case, parametric g-computation using a Monte Carlo algorithm, or g-computation by iterative conditional expectation are easier to apply. Below, we describe three g-computation procedures for the estimation of a CDE: parametric g-computation, using Monte Carlo simulation g-computation by iterative conditional expectation sequential g-estimator 6.2.1 Parametric g-computation Parametric g-computation by Monte Carlo simulation have been described by Robins (Robins 1986), Taubman et al. (Taubman et al. 2009), or Daniel et al. (Daniel et al. 2013). Fit a parametric model to estimate the density of the intermediate confounder \\(L(1)\\) conditional on its parents. If \\(L(1)\\) is a set of several variables, it is necessary to fit a model for each variable conditional on its parents. \\[\\begin{equation} Q_{L(1)}(A) = P(L(1)=1 \\mid L(0),A) \\end{equation}\\] Fit a model of the outcome \\(Y\\) conditional on its parents: \\[\\begin{equation} \\overline{Q}_Y(A,L(1),M) = \\mathbb{E}\\left(Y \\mid L(0),A,L(1),M \\right) \\end{equation}\\] Simulate individual values of \\(L(1)_a\\) using the estimated density \\(\\hat{Q}_{L(1)}(A=a)\\) under the counterfactual scenarios setting \\(A=0\\) or \\(A=1\\) Estimate mean values of the outcome under the counterfactual scenarios setting \\(A=0\\) (or \\(A=1\\)), \\(L(1)=l(1)_{A=0}\\) (or \\(L(1)=l(1)_{A=1}\\)) and \\(M=m\\), using \\(\\hat{\\overline{Q}}_Y(A=a,L(1)=l(1)_a,M=m)\\) Estimate the controlled direct effect \\(\\Psi_{\\text{CDE}_m}\\) by the sample mean: \\[\\begin{equation} \\small \\hat{\\Psi}^{\\text{CDE}_m}_{\\text{param.gcomp}} = \\frac{1}{n} \\sum_{i=1}^n \\left[ \\hat{\\overline{Q}}_Y(A=1,L(1)=l(1)_{A=1},M=m)_i - \\hat{\\overline{Q}}_Y(A=0,L(1)=l(1)_{A=0},M=m)_i \\right] \\end{equation}\\] For continuous outcomes, \\(\\overline{Q}_Y(A,L(1),M)\\) functions can be estimated using linear regressions. For binary outcomes, they can be estimated using logistic regressions. ## 1. Fit parametric models to estimate the density of intermediate confounders, ## conditional on the parents of the intermediate confounders L1.model &lt;- glm(L1 ~ L0_male + L0_parent_low_educ_lv + A0_ace, family = &quot;binomial&quot;, data = df2_int) ## 2. Fit parametric models for the outcome conditional on past Y.death.model &lt;- glm(Y_death ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1 + M_smoking + A0_ace:M_smoking, family = &quot;binomial&quot;, data = df2_int) Y.qol.model &lt;- glm(Y_qol ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1 + M_smoking + A0_ace:M_smoking, family = &quot;gaussian&quot;, data = df2_int) ## 3. Simulate individual L1 values under the counterfactual scenarios setting A0=0 or A0=1 set.seed(54321) data.A0 &lt;- data.A1 &lt;- df2_int data.A0$A0_ace &lt;- 0 data.A1$A0_ace &lt;- 1 p.L1.A0 &lt;- predict(L1.model, newdata = data.A0, type=&quot;response&quot;) p.L1.A1 &lt;- predict(L1.model, newdata = data.A1, type=&quot;response&quot;) sim.L1.A0 &lt;- rbinom(n = nrow(df2_int), size = 1, prob = p.L1.A0) sim.L1.A1 &lt;- rbinom(n = nrow(df2_int), size = 1, prob = p.L1.A1) ## 4. Estimate mean outcomes under the counterfactual scenarios setting different ## levels of exposures for A and M: ## {A=0, M=0} or {A=1, M=0} or {A=0, M=1} or {A=1, M=1} data.A0.M0 &lt;- data.A0.M1 &lt;- data.A0 data.A1.M0 &lt;- data.A1.M1 &lt;- data.A1 # L1 variable is replaced by the simulated values in step 3) data.A0.M0$L1 &lt;- sim.L1.A0 data.A0.M1$L1 &lt;- sim.L1.A0 data.A1.M0$L1 &lt;- sim.L1.A1 data.A1.M1$L1 &lt;- sim.L1.A1 # set M to 0 or 1 data.A0.M0$M_smoking &lt;- 0 data.A0.M1$M_smoking &lt;- 1 data.A1.M0$M_smoking &lt;- 0 data.A1.M1$M_smoking &lt;- 1 # predict the probability of death p.death.A0.M0 &lt;- predict(Y.death.model, newdata = data.A0.M0, type=&quot;response&quot;) p.death.A1.M0 &lt;- predict(Y.death.model, newdata = data.A1.M0, type=&quot;response&quot;) p.death.A0.M1 &lt;- predict(Y.death.model, newdata = data.A0.M1, type=&quot;response&quot;) p.death.A1.M1 &lt;- predict(Y.death.model, newdata = data.A1.M1, type=&quot;response&quot;) # predict the mean value of QoL m.qol.A0.M0 &lt;- predict(Y.qol.model, newdata = data.A0.M0, type=&quot;response&quot;) m.qol.A1.M0 &lt;- predict(Y.qol.model, newdata = data.A1.M0, type=&quot;response&quot;) m.qol.A0.M1 &lt;- predict(Y.qol.model, newdata = data.A0.M1, type=&quot;response&quot;) m.qol.A1.M1 &lt;- predict(Y.qol.model, newdata = data.A1.M1, type=&quot;response&quot;) ## 5. Estimate the CDE # CDE setting M=0 CDE.death.m0.gcomp.param &lt;- mean(p.death.A1.M0) - mean(p.death.A0.M0) CDE.death.m0.gcomp.param # [1] 0.06289087 CDE.qol.m0.gcomp.param &lt;- mean(m.qol.A1.M0) - mean(m.qol.A0.M0) CDE.qol.m0.gcomp.param # [1] -4.838654 # CDE setting M=1 CDE.death.m1.gcomp.param &lt;- mean(p.death.A1.M1) - mean(p.death.A0.M1) CDE.death.m1.gcomp.param # [1] 0.08751016 CDE.qol.m1.gcomp.param &lt;- mean(m.qol.A1.M1) - mean(m.qol.A0.M1) CDE.qol.m1.gcomp.param # [1] -10.35059 6.2.2 G-computation by iterative conditional expectation The following steps describe the implementation of the g-computation estimator by iterative conditional expectation for the component \\(\\mathbb{E}(Y_{A=a^\\prime,M=m})\\) used in the definition of CDE \\(\\Psi^{\\text{CDE}_m} = \\mathbb{E}(Y_{A=1,M=m}) - \\mathbb{E}(Y_{A=0,M=m})\\). Interestingly, there is no need to estimate or simulate \\(L(1)\\) density with this method. Fit a logistic or a linear regression of the final outcome, conditional on the exposure \\(A\\), the mediator \\(M\\) and all the parents of \\(Y\\) preceeding \\(M\\), to estimate \\(\\overline{Q}_{Y} = \\mathbb{E}(Y \\mid L(0),A,L(1),M)\\); Use this estimate to predict an outcome for each subject \\(\\hat{\\overline{Q}}_{Y}(M=m)_i\\), by evaluating the regression fit \\(\\overline{Q}_{Y}\\) at the chosen value for the mediator \\(M=m\\); Fit a quasibinomial or a linear regression of the predicted values \\(\\hat{\\overline{Q}}_{Y}(M=m)_i\\) conditional on the exposure \\(A\\) and baseline confounders \\(L(0)\\) to estimate \\(\\overline{Q}_{L(1)} = \\mathbb{E}\\left(\\hat{\\overline{Q}}_{Y}(M=m) \\middle| L(0),A\\right)\\); Use this estimate to predict the outcome \\(\\hat{\\overline{Q}}_{L(1)}(A=a^\\prime)_i\\) for each subject, by evaluating the regression fit \\(\\overline{Q}_{L(1)}\\) at \\(A=a^\\prime\\); Use the sample mean to estimate \\(\\Psi^{\\text{CDE}_m}_{\\text{gcomp}}\\) \\[\\begin{equation} \\hat{\\Psi}^{\\text{CDE}_m}_{\\text{gcomp}} = \\frac{1}{n} \\sum_{i=1}^n \\left[ \\hat{\\overline{Q}}_{L(1)}(A=1)_i - \\hat{\\overline{Q}}_{L(1)}(A=0)_i \\right] \\end{equation}\\] ## 1) Regress the outcome on L0, A, L1 and M (and the A*M interaction if appropriate) Y.death.model &lt;- glm(Y_death ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1 + M_smoking + A0_ace:M_smoking, family = &quot;binomial&quot;, data = df2_int) Y.qol.model &lt;- glm(Y_qol ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1 + M_smoking + A0_ace:M_smoking, family = &quot;gaussian&quot;, data = df2_int) ## 2) Generate predicted values by evaluating the regression setting the mediator ## value to M=0 or to M=1 # (Note: it is also possible to set A=0 or A=1 to evaluate the regression at # exposure history of interest: {A0=1,M=0},{A0=0,M=0},{A0=1,M=1},{A0=0,M=1}) data.Mis0 &lt;- data.Mis1 &lt;- df2_int data.Mis0$M_smoking &lt;- 0 data.Mis1$M_smoking &lt;- 1 Q.Y.death.Mis0 &lt;- predict(Y.death.model, newdata = data.Mis0, type=&quot;response&quot;) Q.Y.death.Mis1 &lt;- predict(Y.death.model, newdata = data.Mis1, type=&quot;response&quot;) Q.Y.qol.Mis0 &lt;- predict(Y.qol.model, newdata = data.Mis0, type=&quot;response&quot;) Q.Y.qol.Mis1 &lt;- predict(Y.qol.model, newdata = data.Mis1, type=&quot;response&quot;) ## 3) Regress the predicted values conditional on the exposure A ## and baseline confounders L(0) L1.death.Mis0.model &lt;- glm(Q.Y.death.Mis0 ~ L0_male + L0_parent_low_educ_lv + A0_ace, family = &quot;quasibinomial&quot;, data = df2_int) L1.death.Mis1.model &lt;- glm(Q.Y.death.Mis1 ~ L0_male + L0_parent_low_educ_lv + A0_ace, family = &quot;quasibinomial&quot;, data = df2_int) L1.qol.Mis0.model &lt;- glm(Q.Y.qol.Mis0 ~ L0_male + L0_parent_low_educ_lv + A0_ace, family = &quot;gaussian&quot;, data = df2_int) L1.qol.Mis1.model &lt;- glm(Q.Y.qol.Mis1 ~ L0_male + L0_parent_low_educ_lv + A0_ace, family = &quot;gaussian&quot;, data = df2_int) ## 4) generate predicted values by evaluating the regression at exposure ## of interest: {A=1} &amp; {A=0} data.Ais0 &lt;- data.Ais1 &lt;- df2_int data.Ais0$A0_ace &lt;- 0 data.Ais1$A0_ace &lt;- 1 Q.L1.death.Ais0.Mis0 &lt;- predict(L1.death.Mis0.model, newdata = data.Ais0, type=&quot;response&quot;) Q.L1.death.Ais1.Mis0 &lt;- predict(L1.death.Mis0.model, newdata = data.Ais1, type=&quot;response&quot;) Q.L1.death.Ais0.Mis1 &lt;- predict(L1.death.Mis1.model, newdata = data.Ais0, type=&quot;response&quot;) Q.L1.death.Ais1.Mis1 &lt;- predict(L1.death.Mis1.model, newdata = data.Ais1, type=&quot;response&quot;) Q.L1.qol.Ais0.Mis0 &lt;- predict(L1.qol.Mis0.model, newdata = data.Ais0, type=&quot;response&quot;) Q.L1.qol.Ais1.Mis0 &lt;- predict(L1.qol.Mis0.model, newdata = data.Ais1, type=&quot;response&quot;) Q.L1.qol.Ais0.Mis1 &lt;- predict(L1.qol.Mis1.model, newdata = data.Ais0, type=&quot;response&quot;) Q.L1.qol.Ais1.Mis1 &lt;- predict(L1.qol.Mis1.model, newdata = data.Ais1, type=&quot;response&quot;) ## 5) Take empirical mean of final predicted outcomes to estimate CDE # CDE setting M=0 CDE.death.m0.gcomp.ice &lt;- mean(Q.L1.death.Ais1.Mis0) - mean(Q.L1.death.Ais0.Mis0) CDE.death.m0.gcomp.ice # [1] 0.06341297 CDE.qol.m0.gcomp.ice &lt;- mean(Q.L1.qol.Ais1.Mis0) - mean(Q.L1.qol.Ais0.Mis0) CDE.qol.m0.gcomp.ice # [1] -4.869509 # CDE setting M=1 CDE.death.m1.gcomp.ice &lt;- mean(Q.L1.death.Ais1.Mis1) - mean(Q.L1.death.Ais0.Mis1) CDE.death.m1.gcomp.ice # [1] 0.08810508 CDE.qol.m1.gcomp.ice &lt;- mean(Q.L1.qol.Ais1.Mis1) - mean(Q.L1.qol.Ais0.Mis1) CDE.qol.m1.gcomp.ice # [1] -10.38144 6.2.3 Sequential g-estimator For quantitative outcomes, Vansteelandt et al. (Epidemiology 20(6);2009) described a sequential g-estimator for CDE. An extension for binary outcomes in case-control studies is also described using OR. The following 2 steps are applied: Fit a regression model for the outcome conditional on the exposure \\(A\\), the mediator \\(M\\), baseline and intermediate confounders \\(L(0)\\) and \\(L(1)\\), in order to estimate the regression coefficients \\(\\hat{\\gamma}_{M}\\) and \\(\\hat{\\gamma}_{A \\ast M}\\) (in case of \\((A \\ast M)\\) interaction effect). \\[\\begin{equation} \\mathbb{E}(Y\\mid L(0),A,L(1),M) = \\gamma_0 + \\gamma_A A + \\gamma_M M + \\psi_{A \\ast M} (A \\ast M) + \\gamma_{L(0)} L(0) + \\gamma_{L(1)} L(1) \\end{equation}\\] Remove the effect of mediator on the outcome, by evaluating the residual outcome: \\[\\begin{equation} Y_{res} = Y - \\hat{\\gamma}_M M - \\hat{\\psi}_{A \\ast M} \\times A \\times M \\end{equation}\\] and regress the residual outcome on the exposure \\(A\\) and baseline confounders \\(L(0)\\): \\[\\begin{equation} \\mathbb{E}(Y_{res}\\mid A, L(0)) = \\alpha_0 + \\psi_A A + \\beta_{L(0)} L(0) \\end{equation}\\] The controlled direct effect \\(\\text{CDE}_m\\) can then be estimated by: \\[\\begin{equation} \\hat{\\Psi}^{\\text{CDE}_m}_{\\text{seq.g.est}} = \\hat{\\psi}_A + \\hat{\\psi}_{A \\ast M} \\times m \\end{equation}\\] ## 1) Regress the outcome on past Y.qol.model &lt;- glm(Y_qol ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1 + M_smoking + A0_ace:M_smoking, family = &quot;gaussian&quot;, data = df2_int) ## 2) Calculate a residual outcome Y - (coef.M * M_smoking) - (coef.A0:M * A0:M) Y.res &lt;- (df2_int$Y_qol - (Y2.qol.model$coefficients[&quot;M_smoking&quot;] * df2_int$M_smoking) - (Y2.qol.model$coefficients[&quot;A0_ace:M_smoking&quot;] * df2_int$A0_ace * data.inter1$M_smoking) ) ## 3) Regress the residual outcome on the exposure A and baseline confounders L(0) Y.res.model &lt;- glm(Y.res ~ L0_male + L0_parent_low_educ_lv + A0_ace, family = &quot;gaussian&quot;, data = df2_int) ## 4) Use coefficients estimated from the 1st and 2nd regression to estimate CDE: CDE.qol.m0.seq &lt;- (Y.res.model$coefficients[&quot;A0_ace&quot;] + 0*Y.qol.model$coefficients[&quot;A0_ace:M_smoking&quot;]) CDE.qol.m0.seq # -4.869509 CDE.qol.m1.seq &lt;- (Y.res.model$coefficients[&quot;A0_ace&quot;] + 1*Y.qol.model$coefficients[&quot;A0_ace:M_smoking&quot;]) CDE.qol.m1.seq # -10.38144 References "],["ChapIptw.html", "Chapter 7 Inverse Probability of Treatment Weighting (IPTW) 7.1 Estimation of the Average total effect 7.2 Estimation of the Controlled direct effect (CDE)", " Chapter 7 Inverse Probability of Treatment Weighting (IPTW) 7.1 Estimation of the Average total effect 7.1.1 IPTW for the ATE If the average total effect (ATE) is identifiable, \\(\\Psi_{ATE} = \\mathbb{E}(Y_{A=1}) - \\mathbb{E}(Y_{A=0})\\) can be expressed using Inverse probability of treatment weighting (IPTW), denoting \\(\\mathbb{P}(A=a \\mid L(0)) = g(A=a \\mid L(0))\\): \\[\\begin{equation} \\Psi_{ATE} = \\mathbb{E}\\left( \\frac{\\mathbb{I}(A=1)}{g(A=1 \\mid L(0))} Y \\right) - \\mathbb{E}\\left( \\frac{\\mathbb{I}(A=0)}{g(A=0 \\mid L(0))} Y \\right) \\end{equation}\\] The following steps describe the implementation of the IPTW estimator Estimate the treatment mechanism \\(g(A=1 \\mid L(0))\\) Predict each individual’s probability of being exposed to her own exposure Apply weights corresponding to the inverse of the predicted probability \\(w_i = \\frac{1}{\\hat{g}(A = a_i \\mid L(0)_i)}\\) Use the empirical mean of the weighted outcome \\(Y\\): \\(\\hat{\\mathbb{E}}(Y_a) = \\frac{1}{n} \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=a)}{\\hat{g}(A=a_i \\mid L(0)_i)} Y_i\\) ## 1. Estimate g g.L &lt;- glm(A0_ace ~ L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df2_int) ## 2. Predict each individual&#39;s probability of being exposed to her own exposure # predict the probabilities P(A0_ace=1|L(0)) &amp; P(A0_ace=0|L(0)) pred.g1.L &lt;- predict(g.L, type=&quot;response&quot;) pred.g0.L &lt;- 1 - pred.g1.L # the predicted probability of the observed treatment A=a_i is : gA.L &lt;- rep(NA, nrow(df2_int)) gA.L[df2_int$A0_ace == 1] &lt;- pred.g1.L[df2_int$A0_ace == 1] gA.L[df2_int$A0_ace == 0] &lt;- pred.g0.L[df2_int$A0_ace == 0] ## 3. Apply weights corresponding to the inverse of the predicted probability wt &lt;- 1 / gA.L ## 4. Use the empirical mean of the weighted outcome # point estimates: IPTW.death &lt;- mean(wt * as.numeric(df2_int$A0_ace == 1) * df2_int$Y_death) - mean(wt * as.numeric(df2_int$A0_ace == 0) * df2_int$Y_death) IPTW.death # [1] 0.08224947 IPTW.qol &lt;- mean(wt * as.numeric(df2_int$A0_ace == 1) * df2_int$Y_qol) - mean(wt * as.numeric(df2_int$A0_ace == 0) * df2_int$Y_qol) IPTW.qol # [1] -8.436797 The ATE estimates using IPTW for death probability and mean quality of life are respectively +8.2% and -8.44. 7.1.2 Stabilized IPTW for the ATE If the average total effect (ATE) is identifiable, \\(\\Psi_{ATE}\\) can be estimated using a stabilized IPTW estimator: \\[\\begin{equation} \\hat{\\mathbb{E}}(Y_1) - \\hat{\\mathbb{E}}(Y_0) = \\frac{\\frac{1}{n} \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=1)\\hat{g}^*(A_i=1)}{\\hat{g}(A_i=1 \\mid L(0)_i)} Y_i}{ \\frac{1}{n} \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=1)\\hat{g}^*(A_i=1)}{\\hat{g}(A_i=1 \\mid L(0)_i)}} - \\frac{\\frac{1}{n} \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=0)\\hat{g}^*(A_i=0)}{\\hat{g}(A_i=0 \\mid L(0)_i)} Y_i}{ \\frac{1}{n} \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=0)\\hat{g}^*(A_i=0)}{\\hat{g}(A_i=0 \\mid L(0)_i)}} \\end{equation}\\] The estimation algorithm is the same as for IPTW, but taking into account any non-null function of \\(A\\) (\\(g^*(A_i=a)\\)) in the denominator of the weight in step 3, and applying the stabilized estimator in step 4. ## 3. For example, applying g^*(A) = 1 ## 4. Applying the stabilized estimator # point estimates: s.IPTW.death &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1) * df2_int$Y_death) / mean(wt * as.numeric(df2_int$A0_ace == 1))) - (mean(wt * as.numeric(df2_int$A0_ace == 0) * df2_int$Y_death) / mean(wt * as.numeric(df2_int$A0_ace == 0))) s.IPTW.death # [1] 0.08294185 s.IPTW.qol &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1) * df2_int$Y_qol) / mean(wt * as.numeric(df2_int$A0_ace == 1))) - (mean(wt * as.numeric(df2_int$A0_ace == 0) * df2_int$Y_qol) / mean(wt * as.numeric(df2_int$A0_ace == 0))) s.IPTW.qol # [1] -8.291992 The ATE estimates using stabilized IPTW for death probability and mean quality of life are respectively +8.3% and -8.29. 7.2 Estimation of the Controlled direct effect (CDE) 7.2.1 IPTW for the CDE If the controlled direct effect (CDE) is identifiable, \\(\\Psi^{\\text{CDE}_m} = \\mathbb{E}(Y_{A=1,M=m}) - \\mathbb{E}(Y_{A=0,M=m})\\) can be expressed by the basic Horvitz Thompson estimator (using Inverse probability of treatment weighting (IPTW)), denoting \\(\\mathbb{P}\\left(A=a \\mid L(0)) = g(A=a \\mid L(0)\\right)\\) and \\(\\mathbb{P}\\left(M=m \\mid L(0),A,L(1)) = g(M=m \\mid L(0),A,L(1)\\right)\\): \\[\\begin{equation} \\small \\Psi^{\\text{CDE}_m} = \\mathbb{E}\\left[ \\frac{\\mathbb{I}(A=1 \\cap M=m)}{g(A=1 \\mid L(0)) \\times g(M=m \\mid L(0),A,L(1))} Y \\right] - \\mathbb{E}\\left[ \\frac{\\mathbb{I}(A=0 \\cap M=m)}{g(A=0 \\mid L(0)) \\times g(M=m \\mid L(0),A,L(1))} Y \\right] \\end{equation}\\] The following steps describe the implementation of the IPTW estimator Estimate the treatment mechanisms \\(g\\left(A=1 \\mid L(0)\\right)\\) and \\(g\\left(M=1 \\mid L(0),A,L(1)\\right)\\) Predict each individual’s probability of being exposed to her own exposure Apply weights corresponding to the inverse of the predicted probability \\(w_{A_i} = \\frac{1}{\\hat{g}(A = a_i \\mid L(0)_i)}\\) and \\(w_{M_i} = \\frac{1}{\\hat{g}(M = m_i \\mid L(0)_i,A_i,L(1)_i)}\\) Use the empirical mean of the weighted outcome \\(Y\\): \\(\\hat{\\mathbb{E}}(Y_{a,m}) = \\frac{1}{n} \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=a \\cap M_i=m)}{\\hat{g}(A=a_i \\mid L(0)_i) \\times \\hat{g}(M=m_i \\mid L(0)_i,A_i,L(1)_i)} Y_i\\) ## 1. Estimate gA and gM gA.L &lt;- glm(A0_ace ~ L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df2_int) gM.L &lt;- glm(M_smoking ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1, family = &quot;binomial&quot;, data = df2_int) ## 2. Predict each individual&#39;s probability of being exposed to her own exposure # predict the probabilities P(A0_ace=1|L(0)) &amp; P(A0_ace=0|L(0)) pred.gA1.L &lt;- predict(gA.L, type = &quot;response&quot;) pred.gA0.L &lt;- 1 - pred.gA1.L # the predicted probability of the observed treatment A_i=a is : gAobs.L &lt;- rep(NA, nrow(df2_int)) gAobs.L[df2_int$A0_ace == 1] &lt;- pred.gA1.L[df2_int$A0_ace == 1] gAobs.L[df2_int$A0_ace == 0] &lt;- pred.gA0.L[df2_int$A0_ace == 0] # predict the probabilities P(M=1|L(0),A,L(1)) &amp; P(M=0|L(0),A,L(1)) pred.gM1.L &lt;- predict(gM.L, type = &quot;response&quot;) pred.gM0.L &lt;- 1 - pred.gM1.L # the predicted probability of the observed treatment M_i=m is : gMobs.L &lt;- rep(NA, nrow(df2_int)) gMobs.L[df2_int$M_smoking == 1] &lt;- pred.gM1.L[df2_int$M_smoking == 1] gMobs.L[df2_int$M_smoking == 0] &lt;- pred.gM0.L[df2_int$M_smoking == 0] ## 3. Apply weights corresponding to the inverse of the predicted probability wt_A &lt;- 1 / gAobs.L wt_M &lt;- 1 / gMobs.L wt &lt;- wt_A * wt_M ## 4. Use the empirical mean of the weighted outcome # point estimates of CDE, setting M=0 CDE_IPTW_m0_death &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 0) * df2_int$Y_death) - mean(wt * as.numeric(df2_int$A0_ace==0 &amp; df2_int$M_smoking == 0) * df2_int$Y_death)) CDE_IPTW_m0_death # [1] 0.05874684 CDE_IPTW_m0_qol &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 0) * df2_int$Y_qol) - mean(wt * as.numeric(df2_int$A0_ace==0 &amp; df2_int$M_smoking == 0) * df2_int$Y_qol)) CDE_IPTW_m0_qol # [1] -5.341138 # point estimates of CDE, setting M=1 CDE_IPTW_m1_death &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 1) * df2_int$Y_death) - mean(wt * as.numeric(df2_int$A0_ace==0 &amp; df2_int$M_smoking == 1) * df2_int$Y_death)) CDE_IPTW_m1_death # [1] 0.101733 CDE_IPTW_m1_qol &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 1) * df2_int$Y_qol) - mean(wt * as.numeric(df2_int$A0_ace==0 &amp; df2_int$M_smoking == 1) * df2_int$Y_qol)) CDE_IPTW_m1_qol # [1] -8.185866 7.2.2 Stabilized IPTW for the CDE If the controlled dired effect (CDE) is identifiable, \\(\\Psi^{CDE}\\) can be estimated using a stabilized IPTW estimator (modified Horvitz Thompson estimator): \\[\\begin{equation} \\small \\hat{\\mathbb{E}}(Y_{1,m}) - \\hat{\\mathbb{E}}(Y_{0,m}) = \\frac{ \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=1 \\cap M_i=m)}{\\hat{g}(A_i=1 \\mid L(0)_i) \\times \\hat{g}(M_i=m \\mid L(0)_i,A_i,L(1)_i)} Y_i}{\\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=1 \\cap M_i=m)}{\\hat{g}(A_i=1 \\mid L(0)_i) \\hat{g}(M_i=m \\mid L(0)_i,A_i,L(1)_i)}} - \\frac{ \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=0 \\cap M_i=m)}{\\hat{g}(A_i=0 \\mid L(0)_i) \\times \\hat{g}(M_i=m \\mid L(0)_i,A_i,L(1)_i)} Y_i}{ \\sum_{i=1}^n \\frac{\\mathbb{I}(A_i=0 \\cap M_i=m)}{\\hat{g}(A_i=0 \\mid L(0)_i) \\times \\hat{g}(M_i=m \\mid L(0)_i,A_i,L(1)_i)}} \\end{equation}\\] The estimation algorithm is the same as for IPTW, but applying the stabilized estimator in step 4. ## 4. Applying the stabilized estimator # point estimates of CDE, setting M=0: CDE_sIPTW_m0_death &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 0) * df2_int$Y_death) / mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 0))) - (mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 0) * df2_int$Y_death) / mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 0))) CDE_sIPTW_m0_death # [1] 0.0601292 CDE_sIPTW_m0_qol &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 0) * df2_int$Y_qol) / mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 0))) - (mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 0) * df2_int$Y_qol) / mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 0))) CDE_sIPTW_m0_qol # [1] -4.966328 # point estimates of CDE, setting M=1: CDE_sIPTW_m1_death &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 1) * df2_int$Y_death) / mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 1))) - (mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 1) * df2_int$Y_death) / mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 1))) CDE_sIPTW_m1_death # [1] 0.09030186 CDE_sIPTW_m1_qol &lt;- (mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 1) * df2_int$Y_qol) / mean(wt * as.numeric(df2_int$A0_ace == 1 &amp; df2_int$M_smoking == 1))) - (mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 1) * df2_int$Y_qol) / mean(wt * as.numeric(df2_int$A0_ace == 0 &amp; df2_int$M_smoking == 1))) CDE_sIPTW_m1_qol # [1] -10.03045 "],["msm_chapter.html", "Chapter 8 Marginal structural models 8.1 MSM for the Average Total Effect (ATE) 8.2 MSM for Controlled Direct Effects 8.3 MSM for Natural Direct and Indirect Effects", " Chapter 8 Marginal structural models Marginal structural models (MSM) are parametric models that are used to summarize the relationship between the counterfactual outcome (\\(Y_a\\) or \\(Y_{am}\\) for example) and the exposure(s) \\(A\\) and mediators \\(M\\). It also possible to summarize the relationship according to a subset of the baseline confounders if it is relevant for the scientific question. To illustrate the application of MSMs, we will first use the data simulated from the Causal model 1 (with an \\(A \\ast M\\) interaction effect on the outcome) where the exposure \\(A\\) doesn’t affect the counfonder \\(L(1)\\) between the mediator and the outcome. 8.1 MSM for the Average Total Effect (ATE) 8.1.1 Expressing the ATE using coefficients of an MSM For a continuous or binary outcome, we can use the following MSM to summarize the relationship between the counterfactual outcome (\\(Y_a\\)) and the exposure(s) \\(A\\): \\[\\begin{equation} \\mathbb{E}(Y_a) = \\alpha_0 + \\alpha_A a \\tag{8.1} \\end{equation}\\] The Average Total Effect \\(\\text{ATE} = \\mathbb{E}(Y_{A=1}) - \\mathbb{E}(Y_{A=0})\\) can then be expressed using the coefficients of this MSM (8.1): \\[\\begin{equation*} \\text{ATE} := \\left(\\alpha_0 + \\alpha_A \\times 1 \\right) - \\left(\\alpha_0 + \\alpha_A \\times 0 \\right) = \\alpha_A \\end{equation*}\\] In this example, the coefficient \\(\\alpha_A\\) corresponds to the \\(\\text{ATE}\\). Such a model is not very useful for a binary exposure. It would be much more useful for higher-dimensional exposures, for example with a continuous exposure, where the relationship between all the possible continuous values of the exposure \\(A=a\\) and the corresponding outcomes \\(Y_a\\) is summarized (and arbitrarily simplified) by a single line and the slope coefficient \\(\\alpha_A\\). It is also possible to define MSMs adjusted for a subset \\(V\\) of the baseline confounders (\\(V \\subset L(0)\\)). Such MSMs can be useful to estimate conditional effects. For example it is possible to define an average “conditional” total effect \\(\\text{ATE}|L(0)\\) (instead of the marginal ATE defined above), projecting the counterfactual outcomes on a parametric model such as the following: \\[\\begin{equation} \\mathbb{E}(Y_a \\mid L(0)) = \\alpha_0 + \\alpha_A a + \\alpha_\\text{male} L_\\text{male}(0) + \\alpha_\\text{low.educ.} L_\\text{low.educ.}(0) \\tag{8.2} \\end{equation}\\] so that \\(\\text{ATE} \\mid L(0) = \\mathbb{E}(Y_{A=1} \\mid L(0)) - \\mathbb{E}(Y_{A=0} \\mid L(0)) = \\alpha_A\\) using the coefficient from the MSM (8.2). MSMs are also very useful to study interactions, or effect modification of the exposure \\(A\\) by a baseline confounder. For example, in order to study the average total effect according to sex, we can use the following MSM: \\[\\begin{equation} \\mathbb{E}(Y_a \\mid L_\\text{male}(0)) = \\alpha_0 + \\alpha_A a + \\alpha_\\text{male} L_\\text{male}(0) + \\alpha_{A \\ast L_\\text{male}} \\left(a \\times L_\\text{male}(0)\\right) \\tag{8.3} \\end{equation}\\] and express the average total effect in each strata of sex using the coefficients of the MSM (8.3): \\[\\begin{align*} \\{\\text{ATE} \\mid L_\\text{male}(0) = 0\\} &amp;:= \\mathbb{E}(Y_1 \\mid L_\\text{male}(0) = 0) - \\mathbb{E}(Y_0 \\mid L_\\text{male}(0) = 0) = \\alpha_A \\\\ \\{\\text{ATE} \\mid L_\\text{male}(0) = 1\\} &amp;:= \\mathbb{E}(Y_1 \\mid L_\\text{male}(0) = 1) - \\mathbb{E}(Y_0 \\mid L_\\text{male}(0) = 1) = \\alpha_A + \\alpha_{A \\ast L_\\text{male}} \\end{align*}\\] Because MSMs are models of unobserved counterfactual outcomes, estimators of the MSM coefficients are necessary. We will describe two possible approaches : estimation by IPTW or by G-computation. In both approaches, 95% confidence intervals can be computed by bootstrap. 8.1.2 Estimation of the MSM coefficients by IPTW MSM coefficients can be easily estimated using an Inverse Probability of Treatment (IPTW) approach based on weighted regressions. For example, in order to fit the MSM (8.3) described above, we can use a linear regression of the (observed) outcome \\(Y\\) on the exposure and sex, weigthed by individual weights \\(w_i\\) or \\(sw_i\\): \\[\\begin{equation} \\mathbb{E}\\left[Y \\mid L_\\text{male}(0)\\right] = \\alpha_0 + \\alpha_A a + \\alpha_\\text{male} L_\\text{male}(0) + \\alpha_{A \\ast L_\\text{male}} \\left(a \\times L_\\text{male}(0)\\right) \\end{equation}\\] where \\(w_i=\\frac{1}{P(A=a_i \\mid L(0)=l(0)_i)}\\) or \\(sw_i=\\frac{P(A=a_i \\mid L_\\text{male}(0))}{P(A=a_i \\mid L(0)=l(0)_i)}\\). As in chapter 7, the “no-unmeasured confounding” assumption is addressed by the application of weights \\(w_i\\) or \\(sw_i\\), which balance confounders \\(L(0)\\) relative to the exposure \\(A\\). ## 1. Denominator of the weight # 1a. Estimate g(A=a_i|L(0)) (denominator of the weight) g.A.L &lt;- glm(A0_ace ~ L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df1_int) # 1b. Predict each individual&#39;s probability of being exposed to her own exposure # predict the probabilities P(A0_ace=1 &amp; P(A0_ace=0) pred.g1.L &lt;- predict(g.A.L, type=&quot;response&quot;) pred.g0.L &lt;- 1 - pred.g1.L # the predicted probability of the observed treatment P(A = a_i | L(0)) is : gAi.L &lt;- rep(NA, nrow(df1_int)) gAi.L[df1_int$A0_ace==1] &lt;- pred.g1.L[df1_int$A0_ace==1] gAi.L[df1_int$A0_ace==0] &lt;- pred.g0.L[df1_int$A0_ace==0] ## 2. Numerator of the weight # The numerator of the weight can be 1 for simple weights, # or g(A=a_i|V) to obtain stabilized weights which put less weight to individuals # with less observation. Stabilized weights enable a weaker positivity assumption. # 2a. Estimate g(A=a_i | sex) (numerator of the stabilized weight) g.A.sex &lt;- glm(A0_ace ~ L0_male, family = &quot;binomial&quot;, data = df1_int) # 2b. Predict each individual&#39;s probability of being exposed to her own exposure # predict the probabilities P(A0_ace=1 | sex) &amp; P(A0_ace=0 | sex) pred.g1.sex &lt;- predict(g.A.sex, type=&quot;response&quot;) pred.g0.sex &lt;- 1 - pred.g1.sex # the predicted probability of the observed treatment P(A = a_i | sex) is : gAi.sex &lt;- rep(NA, nrow(df1_int)) gAi.sex[df1_int$A0_ace==1] &lt;- pred.g1.sex[df1_int$A0_ace==1] gAi.sex[df1_int$A0_ace==0] &lt;- pred.g0.sex[df1_int$A0_ace==0] ## 3. Define individual weights: # We can use simple weights w = 1 / g(A=a_i | L(0)) w &lt;- 1 / gAi.L # Or alternatively, we can use stabilized weights : # sw = g(A=a_i | sex) / g(A=a_i | L(0)) sw &lt;- gAi.sex / gAi.L # we can see that stabilized weights have less extreme values par(mfcol = c(1,2)) boxplot(w ~ df1_int$A0_ace) boxplot(sw ~ df1_int$A0_ace) ## 4. Estimate coefficients of the MSM using a weighted regression E(Y | A, sex) # a GLM with gaussian family can be applied to estimate risk difference msm1 &lt;- glm(Y_death ~ A0_ace + L0_male + A0_ace*L0_male, weights = w, # applying the simple weight family = &quot;gaussian&quot;, data = df1_int) coef(msm1) # (Intercept) A0_ace L0_male A0_ace:L0_male # 0.17573472 0.03589627 0.04598911 0.04136896 msm2 &lt;- glm(Y_death ~ A0_ace + L0_male + A0_ace*L0_male, weights = sw, # applying the stabilized weight family = &quot;gaussian&quot;, data = df1_int) coef(msm2) # (Intercept) A0_ace L0_male A0_ace:L0_male # 0.17573472 0.03589627 0.04598911 0.04136896 ## 5. Estimate the ATE stratified by sex # According to the MSM1 (with simple weights) ATE.msm1.male0 &lt;- coef(msm1)[&quot;A0_ace&quot;] # 0.03589627 ATE.msm1.male1 &lt;- coef(msm1)[&quot;A0_ace&quot;] + coef(msm1)[&quot;A0_ace:L0_male&quot;] # 0.07726522 # According to the MSM2 (with stabilized weights) ATE.msm2.male0 &lt;- coef(msm2)[&quot;A0_ace&quot;] # 0.03589627 ATE.msm2.male1 &lt;- coef(msm2)[&quot;A0_ace&quot;] + coef(msm2)[&quot;A0_ace:L0_male&quot;] # 0.07726522 # The results are the same because there is no violation of the positivity assumption # In case of positivity violation, stabilized weights would give more accurate estimates The ATE estimates of death probability using an MSM estimated by IPTW are respectively +3.6% in women and +7.7% in men. 95% confidence intervales can be calculated by bootstrap. Note: Using the true data generating model used to simulate the illustrative datasets, the “true” value of the ATE stratified by sex can be calculated: the “true” \\((ATE \\mid L_\\text{male}(0) = 0) = 0.0688\\) in women, the “true” \\((ATE \\mid L_\\text{male}(0) = 1) = 0.0703\\) in men. 8.1.3 Estimation of the MSM coefficiets by G-computation (imputation) We can also use a G-computation (sometimes described as an imputation) approach to estimate the coefficients of an MSM. The following steps can be applied: Fit a (logistic or a linear) regression to estimate \\(\\overline{Q} = \\mathbb{E}(Y \\mid A, L(0))\\) Use this estimate to predict an outcome for each subject under the counterfactual scenarios \\(\\hat{\\overline{Q}}(A=0)_i\\) and \\(\\hat{\\overline{Q}}(A=1)_i\\), by evaluating the regression fit \\(\\overline{Q}\\) at \\(A=0\\) and \\(A=1\\) respectively Duplicate the initial dataset in a single long dataset in which: the first half of the long dataset corresponds to the first counterfactual scenario with \\(A=0\\) for all individuals and an additional column for the predicted counterfactual outcome \\(\\hat{\\overline{Q}}(A=0)\\) ; the second half of the long dataset corresponds to the second counterfactual scenario with \\(A=1\\) for all individuals and \\(\\hat{\\overline{Q}}(A=1)\\) for the predicted counterfactual column. Fit the MSM \\(E\\left[Y_a \\mid L_\\text{male}(0)\\right]\\) using the long dataset. ## 1. Estimate Qbar Q.tot.death &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;gaussian&quot;, data = df1_int) # The final result would be sligthly different if we apply a binomial family. ## 2. Predict an outcome for each subject, in 2 counterfactual scenarios ## setting A=0 and A=1 # prepare data sets used to predict the outcome under the counterfactual # scenarios setting A=0 and A=1 data.A1 &lt;- data.A0 &lt;- df1_int data.A1$A0_ace &lt;- 1 data.A0$A0_ace &lt;- 0 # predict values under the same name in the corresponding counterfactual dataset data.A1$Ya.death.pred &lt;- predict(Q.tot.death, newdata = data.A1, type = &quot;response&quot;) data.A0$Ya.death.pred &lt;- predict(Q.tot.death, newdata = data.A0, type = &quot;response&quot;) ## 3. Append both counterfactual datasets in a single long dataset # (the number of row is twice the initial number of row because there are 2 # counterfactual scenarios) data.2scenarios &lt;- rbind(data.A0, data.A1) ## 4. fit the MSM: E(Y_a|sex) MSM.ATE.gcomp &lt;- glm(Ya.death.pred ~ A0_ace + L0_male + A0_ace:L0_male, family = &quot;gaussian&quot;, data = data.2scenarios) coef(MSM.ATE.gcomp) # (Intercept) A0_ace L0_male A0_ace:L0_male # 1.743994e-01 7.720726e-02 4.874750e-02 4.802530e-16 ## 5. Estimate the ATE stratified by sex # According to MSM.ATE.gcomp ATE.MSM.gcomp.male0 &lt;- coef(MSM.ATE.gcomp)[&quot;A0_ace&quot;] # 0.07720726 ATE.MSM.gcomp.male1 &lt;- (coef(MSM.ATE.gcomp)[&quot;A0_ace&quot;] + coef(MSM.ATE.gcomp)[&quot;A0_ace:L0_male&quot;]) # 0.07720726 # The results are the same in both strata, because in the first Qbar model, # we did not include any (A * sex) interaction term # Applying a binomial family for the first Qbar model would result in two # different values of the ATE stratified by sex. # =&gt; 0.06880798 in the L0_male = 0 strata # =&gt; 0.08053575 in the L0_male = 1 strata # Comments: For the estimation of the first Qbar model, applying a gaussian family # (additive model) with no interaction terms implies the presence of some interaction # terms in a multiplicative model (such as a glm with a binomial family). # On the contrary, applying a binomial family (multiplicative model) with no # interaction terms implies some interaction terms in an additive model (such as # a glm with a gaussian family) 8.2 MSM for Controlled Direct Effects 8.2.1 Expressing the CDE using coefficients of an MSM The controlled direct effect is defined as \\(\\text{CDE}_m= \\mathbb{E}(Y_{am}) - \\mathbb{E}(Y_{a^*m})\\). Using the following MSM \\[\\begin{equation} \\mathbb{E}(Y_{am}) = \\alpha_0 + \\alpha_A a + \\alpha_M m + \\alpha_{A \\ast M} a \\times m \\tag{8.4} \\end{equation}\\] the controlled direct effect (keeping the mediator constant to the value \\(M=m\\)) can be expressed using the coefficients of the MSM (8.4): \\[\\begin{align*} \\text{CDE}_m &amp;= (\\alpha_0 + \\alpha_A a + \\alpha_M m + \\alpha_{A \\ast M} a \\times m) - (\\alpha_0 + \\alpha_A a^* + \\alpha_M m + \\alpha_{A \\ast M} a^* \\times m) \\\\ \\text{CDE}_m &amp;= \\alpha_A(a - a^* ) + \\alpha_{A \\ast M} \\times (a - a^*) \\times m \\end{align*}\\] For a binary exposure \\(A\\), we have \\(\\text{CDE}_m=\\alpha_A + \\alpha_{A \\ast M} \\times m\\). 8.2.2 Estimation of the MSM coefficients by IPTW MSM coefficients can be easily estimated using an Inverse Probability of Treatment (IPTW) approach based on weighted regressions. In order to fit the MSM (8.4), we can use a linear regression of the (observed) outcome \\(Y\\) on the exposure and mediator, weigthed by individual stabilized weights \\(sw_i\\): \\[\\begin{equation} \\mathbb{E}\\left(Y \\mid A,M\\right) = \\alpha_0 + \\alpha_A a + \\alpha_M m + \\alpha_{A \\ast M} a \\times m \\end{equation}\\] where \\(sw_i\\) is the product of two weights \\(sw_i = sw_{A,i} \\times sw_{M,i}\\), \\(sw_{A,i}=\\frac{P(A=a_i)}{P(A=a_i \\mid L(0)=l(0)_i)}\\) and \\(sw_{M,i}=\\frac{P(M=m_i \\mid A=a_i)}{P(M = m_i \\mid A=a_i,L(0)=l(0)_i), L(1)=l(1)_i}\\). The “no-unmeasured confounding” assumption is addressed by the application of weights \\(sw_i\\), which balance confounders \\(L(0)\\) relative to the exposure-outcome \\(A-Y\\) relationship, and balance the set of confounders \\(\\{L(0),A,L(1)\\}\\) relative to the mediator-outcome \\(M-Y\\) relationship. Importantly, this approach for the estimation of the controlled direct effect \\(\\text{CDE}_m\\) by IPTW is also valid if the exposure \\(A\\) affects the intermediate confounder \\(L(1)\\) (as with the Causal model 2). ### MSM of CDE, estimated by IPTW ---------------------------------------------- ## 1. Stabilized weight for the exposure sw_{A,i} # 1a. Estimate g(A=a_i|L(0)) (denominator of the weight) g.A.L &lt;- glm(A0_ace ~ L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df1_int) # 1b. Predict each individual&#39;s probability of being exposed to her own exposure # the predicted probability of the observed treatment g(A = a_i | L(0)) is : gAi.L &lt;- rep(NA, nrow(df1_int)) gAi.L[df1_int$A0_ace==1] &lt;- predict(g.A.L, type=&quot;response&quot;)[df1_int$A0_ace==1] gAi.L[df1_int$A0_ace==0] &lt;- (1 - predict(g.A.L, type=&quot;response&quot;))[df1_int$A0_ace==0] # 1c. Estimate g(A=a_i) (numerator of the weight) g.A &lt;- glm(A0_ace ~ 1, family = &quot;binomial&quot;, data = df1_int) # 1d. Predict each individual&#39;s probability of being exposed to her own exposure # the predicted probability of the observed treatment g(A = a_i) is : gAi &lt;- rep(NA, nrow(df1_int)) gAi[df1_int$A0_ace==1] &lt;- predict(g.A, type=&quot;response&quot;)[df1_int$A0_ace==1] gAi[df1_int$A0_ace==0] &lt;- (1 - predict(g.A, type=&quot;response&quot;))[df1_int$A0_ace==0] # 1e. Calculate the weight for the exposure A: sw_{A,i} sw_Ai &lt;- gAi / gAi.L ## 2. Stabilized weight for the mediator sw_{M,i} # 2a. Estimate g(M=m_i|L(0),A,L(1)) (denominator of the weight) g.M.L &lt;- glm(M_smoking ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1, family = &quot;binomial&quot;, data = df1_int) # 2b. Predict each individual&#39;s probability of being exposed to her own exposure # the predicted probability of the observed treatment g(A = a_i | L(0)) is : gMi.L &lt;- rep(NA, nrow(df1_int)) gMi.L[df1_int$M_smoking==1] &lt;- predict(g.M.L, type=&quot;response&quot;)[df1_int$M_smoking==1] gMi.L[df1_int$M_smoking==0] &lt;- (1 - predict(g.M.L, type=&quot;response&quot;))[df1_int$M_smoking==0] # 2c. Estimate g(M=m_i|A) (numerator of the weight) g.M.A &lt;- glm(M_smoking ~ A0_ace, family = &quot;binomial&quot;, data = df1_int) # 2d. Predict each individual&#39;s probability of being exposed to her own exposure # the predicted probability of the observed treatment g(M = m_i|A) is : gMi.A &lt;- rep(NA, nrow(df1_int)) gMi.A[df1_int$M_smoking==1] &lt;- predict(g.M.A, type=&quot;response&quot;)[df1_int$M_smoking==1] gMi.A[df1_int$M_smoking==0] &lt;- (1 - predict(g.M.A, type=&quot;response&quot;))[df1_int$M_smoking==0] # 2e. Calculate the weight for the mediator M: sw_{M,i} sw_Mi &lt;- gMi.A / gMi.L ## 3. Define the individual stabilized weight for the CDE_m sw_cde &lt;- sw_Ai * sw_Mi ## 4. Estimate coefficients of the MSM using a weighted regression E(Y | A, sex) # a GLM with gaussian family can be applied to estimate risk difference msm_cde &lt;- glm(Y_death ~ A0_ace + M_smoking + A0_ace*M_smoking, weights = sw_cde, family = &quot;gaussian&quot;, data = df1_int) coef(msm_cde) ## 5. Estimate CDE for m=0 and for m=1 using the MSM&#39;s coefficients CDE_mis0 &lt;- coef(msm_cde)[&quot;A0_ace&quot;] # 0.06798282 CDE_mis1 &lt;- coef(msm_cde)[&quot;A0_ace&quot;] + coef(msm_cde)[&quot;A0_ace:M_smoking&quot;] # 0.06302968 In this example, our estimates of the controlled direct effects are \\(CDE_{M=0} = 6.8\\%\\) and \\(CDE_{M=1} = 6.3\\%\\). Confidence intervals can be calculated by bootstrap. 8.3 MSM for Natural Direct and Indirect Effects "],["chap_tmle.html", "Chapter 9 Targeted Maximum Likelihood Estimation (TMLE) 9.1 TMLE for the ATE 9.2 TMLE of the Controlled direct effect (CDE)", " Chapter 9 Targeted Maximum Likelihood Estimation (TMLE) When estimating a mean counterfactual outcome using g-computation methods, we have to estimate some \\(\\bar{Q}\\) functions (functions of the outcome conditional on the exposures and confounders, \\(\\bar{Q}=\\mathbb{E}\\left(Y\\mid A,L(0)\\right)\\)). For example, the Average Total Effect (ATE) is defined as a marginal effect, estimated using the empirical mean of such \\(\\bar{Q}\\) functions: \\[\\begin{equation*} \\hat{\\Psi}^{\\text{ATE}}_{\\text{gcomp}} = \\frac{1}{n} \\sum_{i=1}^n \\left[ \\hat{\\overline{Q}}(A=1)_i - \\hat{\\overline{Q}}(A=0)_i \\right] \\end{equation*}\\] Unless the \\(\\bar{Q}\\) functions are not misspecified, its estimate is expected to be biased (and \\(\\bar{Q}\\) are expected to be misspecified, especially if the set of baseline confounders \\(L(0)\\) is high dimensional, for example if it includes is a large number of variables or continuous variables). In order to improve the estimation of \\(\\bar{Q}(A,L)\\), it is possible to use data-adaptive methods (machine learning algorithms) in order to optimize the bias-variance trade-off. However, this bias-variance trade-off would be optimized for the \\(\\bar{Q}\\) functions, not for the ATE estimate \\(\\hat{\\Psi}^\\text{ATE}_\\text{gcomp}\\). If the \\(\\bar{Q}\\) function is unknown and has to be estimated (preferably by data-adaptive methods), it can be shown that the g-computation estimate of \\(\\Psi^\\text{ATE}\\) is asymptotically biased. The Targeted Maximum Likelihood Estimation (TMLE) method has been developed as an asymptotically linear estimator, so that the estimation of any target parameter in any semiparametric statistical model is unbiased and efficient. In order to estimate a parameter \\(\\Psi(P_0)\\), where \\(P_0\\) is an unknown probability distribution among a set \\(\\mathcal{M}\\) of possible statistical models, the TMLE is described as a two-step procedure (Laan and Rose 2011): The first step is to obtain an initial estimate of the relevant part (\\(\\bar{Q}_0\\) in our applications) of the probability distribution \\(P_0\\). Data adaptive methods (machine learning algorithms) can be used to optimize this first step. The second step is to update the initial fit in order to “target toward making an optimal bias-variance tradeoff for the parameter of interest” \\(\\Psi(\\bar{Q})\\). Several R packages have been developed in order to carry out TMLE estimation of causal effects. We will begin using the ltmle package, as it can be used to estimate ATE or CDE. More generally, this package can be used to estimate the counterfactual effects of repeated exposure in time-to-event settings. In the setting of mediation analysis, a controlled direct effect (CDE) corresponds to a sequence of counterfactual interventions on 2 “exposure variables”: the initial exposure \\(A\\) and the mediator of interest \\(M\\). The package can also be used in simpler settings with only one binary or continuous outcome, measure only once at the end a the study. 9.1 TMLE for the ATE In order to illustrate the TMLE procedure, the estimation of a mean counterfactual outcome, denoted \\(\\Psi(A=1) = \\mathbb{E} \\left[\\bar{Q}(A=1,L(0))\\right]\\), will be described in detail, following the algorithm implemented in the ltmle package. The basic steps of the procedure are the following (Laan and Rose 2011): Estimate \\(\\bar{Q}_0\\). Data-adaptive methods can be used here, the ltmle package relies on the SuperLearner package to fit and predict \\(\\hat{\\bar{Q}}(A=1)\\). Estimate the treatment mechanism \\(g(A=1 \\mid L(0))\\). Once again, data-adaptive methods can be used to improve the estimation. The initial estimator of \\(\\bar{Q}_0(A=1)\\) will be slightly modified using a parametric fluctuation model, in order to reduce the bias when estimating the ATE. For example, the following parametric model of \\(\\bar{Q}_0(A=1)\\) and a “clever covariate” \\(H = \\frac{I(A=1)}{\\hat{g}(A=1 \\mid L(0))}\\) can be applied: \\[\\begin{equation*} \\text{logit} P(Y \\mid \\hat{\\bar{Q}}, H) = \\hat{\\text{logit} \\bar{Q}} + \\varepsilon H \\end{equation*}\\] The parametric fluctuation model is chosen so that the derivative of its log-likelihood loss function is equal to the appropriate component of the efficient influence curve of the target parameter \\(\\Psi(A=1)\\). Modify the initial estimator of \\(\\bar{Q}_0(A=1)\\) with the parametric fluctuation model (using the estimation \\(\\hat{\\varepsilon}\\) from the previous step). We denote \\(\\hat{\\bar{Q}}^*(A=1)\\) the updated value of \\(\\hat{\\bar{Q}}(A=1)\\) Use the updated values \\(\\hat{\\bar{Q}}^*(A=1)\\) in the substitution estimator to estimate the target parameter \\(\\Psi(A=1)\\) : \\[\\begin{equation*} \\hat{\\Psi}(A=1)_\\text{TMLE} = \\frac{1}{n} \\sum_{i=1}^n \\hat{\\bar{Q}}^* (A=1,L(0)) \\end{equation*}\\] Estimate the efficient influence curve \\(D^*(Q_0,g_0)\\) : \\[\\begin{equation*} D^*(Q_0,g_0) = \\frac{I(A=1)}{g_0(A=1 \\mid L(0))}(Y - \\bar{Q}_0(A,L(O))) + \\bar{Q}_0(A=1,L(0)) + \\Psi(A=1) \\end{equation*}\\] The variance of the target parameter can then be calculated using the variance of the efficient influence curve: \\[\\begin{equation*} \\text{var} \\hat{\\Psi}(A=1)_\\text{TMLE} = \\frac{\\text{var} \\hat{D}^*}{n} \\end{equation*}\\] ## 1) Estimate Qbar and predict Qbar when A0_ace is set to 1 Q.fit &lt;- glm(Y_death ~ A0_ace + L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df2_int) data.A1 &lt;- df2_int data.A1$A0_ace &lt;- 1 # predict the Qvar function when setting the exposure to A=1, on the logit scale logit_Qbar_Ais1 &lt;- predict(Q.fit, newdata = data.A1, type = &quot;link&quot;) ## 2) Estimate the treatment mechanism g.L &lt;- glm(A0_ace ~ L0_male + L0_parent_low_educ_lv, family = &quot;binomial&quot;, data = df2_int) # predict the probabilities g(A=1 | L(0)) = P(A0_ace=1|L(0)) g1.L &lt;- predict(g.L, type=&quot;response&quot;) head(g1.L) # 1 2 3 4 5 6 # 0.10989220 0.15629749 0.15629749 0.08894074 0.15629749 0.15629749 # It is useful to check the distribution of gA.L, as values close to 0 or 1 are # indicators of near positivity violation and can result in large variance for the # estimation. # In case of near positivity violation, gA.L values can be truncated to decrease # the variance (at the cost a increased bias). summary(g1.L) # Min. 1st Qu. Median Mean 3rd Qu. Max. # 0.06109 0.08894 0.10989 0.11240 0.15630 0.15630 # there is no positivity issues in this example. ## 3) Determine a parametric family of fluctuations of Qbar. # The fluctuation model is a model of logitQbar and g(A=1|L(0)) # The clever covariate H(A,L(0)) depends on g(A=1|L(0)): H &lt;- (df2_int$A0_ace == 1) / g1.L # Update the initial fit Qbar from step 1. # This is achieved by holding Qbar fixed (as intercept) while estimating the # coefficient epsilon for H # for example we could use the following fluctuation model (from the &quot;Targeted # Learning&quot; book) update.fit &lt;- glm(df2_int$Y_death ~ -1 + offset(logitQ) + H, family = &quot;quasibinomial&quot;) # Coefficients: # H # -0.0001756 # In the ltmle package, the fluctuation parametric model is slightly different # (but with the same purpose). The &quot;clever covariate&quot; H is scaled and used as a # weight in the parametric quasi-logistic regression S1 &lt;- rep(1, nrow(df2_int)) update.fit.ltmle &lt;- glm(df2_int$Y_death ~ -1 + S1 + offset(logitQ), family = &quot;quasibinomial&quot;, weights = scale(H, center = FALSE)) # Coefficients: # S1 # -0.001667 ## 4) Update the initial estimate of Qbar using the fluctuation parametric model Qstar.tmle &lt;- predict(update.fit.ltmle, data = data.frame(logitQ, H), type = &quot;response&quot;) head(Qstar.tmle) # 1 2 3 4 5 6 # 0.2872412 0.3441344 0.3441344 0.2591356 0.3441344 0.3441344 ## 5) Obtain the substition estimator of Psi_Ais1 Psi_Ais1 &lt;- mean(Qstar.tmle) # [1] 0.2871408 ## 5) Calculate standard errors based on the influence curve of the TMLE IC &lt;- H * (df2_int$Y_death - Qstar.tmle) + Qstar.tmle - Psi_Ais1 head(IC) # 0.0001003559 4.2532581791 0.0569935644 -0.0280052148 0.0569935644 0.056993564 # Teh standard error of the target parameter Psi(A=1) can be estimated by : sqrt(var(IC)/nrow(df2_int)) # [1] 0.01383821 We can see that we can get the same output using the ltmle package: library(ltmle) ?ltmle # The Qform and gform arguments are defined from the DAG Qform &lt;- c(Y_death=&quot;Q.kplus1 ~ L0_male + L0_parent_low_educ_lv + A0_ace&quot;) gform &lt;- c(&quot;A0_ace ~ L0_male + L0_parent_low_educ_lv&quot;) # in the ltmle package, the data set should be formated so that the order of the # columns corresponds to the time-ordering of the model data_ltmle &lt;- subset(df2_int, select = c(L0_male,L0_parent_low_educ_lv, A0_ace, Y_death)) # the counterfactual intervention is defined in the abar argument abar &lt;- 1 Psi_Ais1 &lt;- ltmle(data = data_ltmle, Anodes = &quot;A0_ace&quot;, Ynodes = &quot;Y_death&quot;, Qform = Qform, gform = gform, gbounds = c(0.01, 1), # by default, g function are truncated at 0.01 abar = abar, SL.library = &quot;glm&quot;, variance.method = &quot;ic&quot;) # from the ltmle() function, we can get the point estimate, its standard error, # 95% confidence interval and the p-value for the null hypothesis. summary(Psi_Ais1, &quot;tmle&quot;) # Parameter Estimate: 0.28714 # Estimated Std Err: 0.013838 # p-value: &lt;2e-16 # 95% Conf Interval: (0.26002, 0.31426) # The ltmle() function returns an object with several outputs. # We can see that g functions are the same as in the previous manual calculation head(Psi_Ais1$cum.g) # [,1] # [1,] 0.10989220 # [2,] 0.15629749 # [3,] 0.15629749 # [4,] 0.08894074 # [5,] 0.15629749 # [6,] 0.15629749 # we can get the estimation of the epsilon parameter from the fluctuation model Psi_Ais1$fit$Qstar # Coefficients: # S1 # -0.001667 # Degrees of Freedom: 1124 Total (i.e. Null); 1123 Residual # we can get the updated Qbar functions: head(Psi_Ais1$Qstar) # [1] 0.2872412 0.3441344 0.3441344 0.2591356 0.3441344 0.3441344 # we can get the influence curve head(Psi_Ais1$IC$tmle) # [1] 0.0001003559 4.2532581791 0.0569935644 -0.0280052148 0.0569935644 0.0569935644 In practice, it is recommended to apply data-adaptive algorithms to estimate \\(\\bar{Q}\\) and \\(g\\) functions: the ltmle package relies on the SuperLearner package. As indicated in the Guide to SuperLearner, The SuperLearner is “an algorithm that uses cross-validation to estimate the performance of multiple machine learning models, or the same model with different settings. It then creates an optimal weighted average of those models (ensemble learning) using the test data performance.” Here is an example for our estimation of the Average Total Effect (ATE). The SuperLearner package includes a set of algorithms with default parameters (showed by listWrappers()). Because the simulated data set only have 2 binary baseline variables, the set \\(\\mathcal{M}\\) of possible statistical models is limited. In order to estimate the ATE, we will include a library with: SL.mean, the null-model which only predict the marginal mean (it can be used as a reference for a bad model); SL.glm, a glm using the main terms from the Qform and gform argument; SL.interaction.back, a step-by-step backward GLM prodecure (based on the AIC), starting with all \\(2 \\times 2\\) interactions between main terms. Interaction terms might be useful to estimate the \\(\\bar{Q}(A,L(0))\\) function because the dataset was generated from and additive model, where as the function is estimated below using a logistic (multiplicative) model. SL.xgboost.custom a customized xgboost algorithm from the initial SL.xgboost algorithm, showing how we can modify some default arguments. library(SuperLearner) library(xgboost) # Below, we use the same ltmle() function than previously, # and specify a family of algorithms to be used with the SuperLearner ## we can change the default argument of the SL.xgboost algorithm and the ## SL.step.interaction algorithm # We can check how arguments are used in the pre-specified algorithms SL.step.interaction # function (Y, X, newX, family, direction = &quot;both&quot;, trace = 0, # k = 2, ...) # { # fit.glm &lt;- glm(Y ~ ., data = X, family = family) # fit.step &lt;- step(fit.glm, scope = Y ~ .^2, direction = direction, # trace = trace, k = k) # pred &lt;- predict(fit.step, newdata = newX, type = &quot;response&quot;) # fit &lt;- list(object = fit.step) # out &lt;- list(pred = pred, fit = fit) # class(out$fit) &lt;- c(&quot;SL.step&quot;) # return(out) # } # &lt;bytecode: 0x000001b965ed0dc0&gt; # &lt;environment: namespace:SuperLearner&gt; # The pre-specified algorithm can be easily modified to obtain a step-by-step backward # selection. SL.interaction.back = function(...) { SL.step.interaction(..., direction = &quot;backward&quot;) } # The same principle can be applied to modify the SL.xgboost default algorithm SL.xgboost SL.xgboost.custom = function(...) { SL.xgboost(..., ntrees = 50) } ## the algorithms we would like to use can be specified separately for the Q and # g functions SL.library &lt;- list(Q=c(&quot;SL.mean&quot;,&quot;SL.glm&quot;,&quot;SL.interaction.back&quot;, &quot;SL.xgboost.custom&quot;), g=c(&quot;SL.mean&quot;,&quot;SL.glm&quot;,&quot;SL.interaction.back&quot;, &quot;SL.xgboost.custom&quot;)) set.seed(42) Psi_ATE_tmle &lt;- ltmle(data = data_ltmle, Anodes = &quot;A0_ace&quot;, Ynodes = &quot;Y_death&quot;, Qform = Qform, gform = gform, gbounds = c(0.01, 1), abar = list(1,0), # vector of the counterfactual treatment SL.library = SL.library, variance.method = &quot;ic&quot;) summary(Psi_ATE_tmle, estimator = &quot;tmle&quot;) # The function give the ATE on the difference scale (as well, as RR and OR) # Additive Treatment Effect: # Parameter Estimate: 0.081832 # Estimated Std Err: 0.014291 # p-value: 1.0275e-08 # 95% Conf Interval: (0.053822, 0.10984) ## We can see how the SuperLearner used the algorithms for the g function Psi_ATE_tmle$fit$g # [[1]]$A0_ace # Risk Coef # SL.mean_All 0.09976892 0.003545569 # risk is higher for the bad model # SL.glm_All 0.09865424 0.416238369 # SL.interaction.back_All 0.09865424 0.000000000 # SL.xgboost.custom_All 0.09865550 0.580216062 # for the g function, the SuperLearner predicts the treatment mechanism # base on a mix between the glm and the customized xgboost algorithm. ## We can see how the SuperLearner used the algorithms for the g function Psi_ATE_tmle$fit$Q # Risk Coef # SL.mean_All 0.1684737 0.02003166 # risk is higher for the bad model # SL.glm_All 0.1662241 0.00000000 # SL.interaction.back_All 0.1662241 0.55956284 # SL.xgboost.custom_All 0.1662422 0.42040550 # The SuperLearner predicts both the treatment mechanism g and the Q function # from a mix between the backward interaction glm (or the main term glm) and the # customized xgboost algorithm. # However, the choice between the SL.glm and the SL.interaction.back # procedure was arbitrary: as we can see the Risk is exactly the same for both # algorithms. The final model from the step-by-step procedure was much probably # a main term glm. ## The `ltmle` package can also be used to estimate the effect of binary exposures ## on continous outcomes Qform &lt;- c(Y_qol=&quot;Q.kplus1 ~ L0_male + L0_parent_low_educ_lv + A0_ace&quot;) gform &lt;- c(&quot;A0_ace ~ L0_male + L0_parent_low_educ_lv&quot;) set.seed(42) Psi_ATE_tmle_qol &lt;- ltmle(data = subset(df2_int, select = c(L0_male,L0_parent_low_educ_lv, A0_ace, Y_qol)), Anodes = &quot;A0_ace&quot;, Ynodes = &quot;Y_qol&quot;, Qform = Qform, gform = gform, gbounds = c(0.01, 1), abar = list(1,0), # vector of the counterfactual treatment SL.library = SL.library, variance.method = &quot;ic&quot;) summary(Psi_ATE_tmle_qol, estimator = &quot;tmle&quot;) # Additive Treatment Effect: # Parameter Estimate: -8.265 # Estimated Std Err: 0.41008 # p-value: &lt;2e-16 # 95% Conf Interval: (-9.0687, -7.4612) The TMLE estimation of the ATE from the ltmle package for death probability and mean quality of life is +8.18% (95% CI=[+5.38%, +10.98%]) and -8.27 [-9.07, -7.46]. Note that the ltmle package can also be used to calculate the IPTW estimation of the ATE and the CDE. # using the output from the previous ltmle() procedure summary(Psi_ATE_tmle, estimator = &quot;iptw&quot;) # Additive Treatment Effect: # Parameter Estimate: 0.082578 # Estimated Std Err: 0.014415 # p-value: 1.0135e-08 # 95% Conf Interval: (0.054325, 0.11083) summary(Psi_ATE_tmle_qol, estimator = &quot;iptw&quot;) # Additive Treatment Effect: # Parameter Estimate: -8.2887 # Estimated Std Err: 0.41799 # p-value: &lt;2e-16 # 95% Conf Interval: (-9.108, -7.4695) The IPTW estimation of the ATE from the ltmle package for death probability and mean quality of life is +8.26% (95% CI=[+5.43%, +11.08%]) and -8.29 [-9.11, -7.47]. 9.2 TMLE of the Controlled direct effect (CDE) If the controlled direct effect (CDE) is identifiable, the ltmle package can be used to calculate a TMLE estimation of the CDE \\(\\Psi^{\\text{CDE}_m} = \\mathbb{E}(Y_{A=1,M=m}) - \\mathbb{E}(Y_{A=0,M=m})\\). Below, we show how to use the ltmle() function to estimate CDE by TMLE, with data generated from the causal model with the presence of confounders of the mediator-outcome relationship (\\(L(1)\\)) affected by the exposure \\(A\\) (Figure 3.2), and an \\(A \\ast M\\) interaction effect on the outcome. As with the G-computation method by iterative conditional expectation, the TMLE procedure relies on the estimation of 2 \\(\\bar{Q}\\) functions: \\(\\bar{Q}_Y = \\mathbb{E}(Y \\mid L(0),A,L(1),M)\\) and \\(\\bar{Q}_{L(1)} = \\mathbb{E}(\\hat{\\bar{Q}}_Y(M=m) \\mid L(0),A)\\); And as with the IPTW method, the TMLE procedure relies also on the estimation of the 2 treatment mechanisms \\(g\\): \\(g_A(L(0)) = P(A=1 \\mid L(0))\\) and \\(g_M(L(0),A,L(1)) = P(M=1 \\mid L(0),A,L(1))\\). Note: for continuous outcomes, the ltmle package transforms the outcome on a 0 to 1 continuous scale, \\(Y_\\text{transformed} = \\frac{Y - \\min(Y)}{\\max(Y) - \\min(Y)}\\), so that quasi-binomial parametric models can be used in the computation procedure. Mean predictions are then back-transformed on the original scale. 9.2.1 For binary outcomes library(ltmle) # Define the formulas for the estimation of the 2 barQ functions # Note that it is possible to specify the A*M interaction, if we really want to # take it into account. # Another option is to indicate prediction algorithms well adapted to the estimation # of interaction phenomena into the SuperLearner arguments. Qform &lt;- c(L1=&quot;Q.kplus1 ~ L0_male + L0_parent_low_educ_lv + A0_ace&quot;, Y_death=&quot;Q.kplus1 ~ L0_male + L0_parent_low_educ_lv + L1 + A0_ace * M_smoking&quot;) # Define the formulas for the estimation of the 2 g function gform &lt;- c(&quot;A0_ace ~ L0_male + L0_parent_low_educ_lv&quot;, &quot;M_smoking ~ L0_male + L0_parent_low_educ_lv + A0_ace + L1&quot;) # The data frame should follow the time-ordering of the nodes data_binary &lt;- subset(df2_int, select = c(L0_male, L0_parent_low_educ_lv, A0_ace, L1, M_smoking, Y_death)) # Choose a family of data-adaptive algorithms from the SuperLearner package SL.library &lt;- list(Q=c(&quot;SL.mean&quot;,&quot;SL.glm&quot;,&quot;SL.step.interaction&quot;,&quot;SL.xgboost&quot;), g=c(&quot;SL.mean&quot;,&quot;SL.glm&quot;,&quot;SL.step.interaction&quot;,&quot;SL.xgboost&quot;)) ## CDE, setting M=0 set.seed(42) # for reproducibility (xgboost algorithm relies on random procedures) CDE_ltmle_M0_death &lt;- ltmle(data = data_binary, Anodes = c(&quot;A0_ace&quot;, &quot;M_smoking&quot;), Lnodes = c(&quot;L1&quot;), # intermediate confounders +/- baseline Ynodes = c(&quot;Y_death&quot;), survivalOutcome = FALSE, # TRUE for time-to-event outcomes Y Qform = Qform, gform = gform, abar = list(c(1,0), # counterfactual intervention do(A=1,M=0) c(0,0)), # counterfactual intervention do(A=0,M=0) SL.library = SL.library, estimate.time = FALSE, # estimate computation time? gcomp = FALSE, variance.method = &quot;ic&quot;) # a more robust variance can # be estimated with # variance.method = &quot;tmle&quot; summary(CDE_ltmle_M0_death) # Parameter Estimate: 0.056766 # Estimated Std Err: 0.018037 # p-value: 0.0016488 # 95% Conf Interval: (0.021413, 0.092118) ## CDE, setting M=1 set.seed(42) # for reproducibility CDE_ltmle_M1_death &lt;- ltmle(data = data_binary, Anodes = c(&quot;A0_ace&quot;, &quot;M_smoking&quot;), Lnodes = c(&quot;L1&quot;), # intermediate confounders +/- baseline Ynodes = c(&quot;Y_death&quot;), survivalOutcome = FALSE, # TRUE for time-to-event outcomes Y Qform = Qform, gform = gform, abar = list(c(1,1), # counterfactual intervention do(A=1,M=1) c(0,1)), # counterfactual intervention do(A=0,M=1) SL.library = SL.library, estimate.time = FALSE, # estimate computation time? gcomp = FALSE, variance.method = &quot;ic&quot;) summary(CDE_ltmle_M1_death) # Parameter Estimate: 0.094776 # Estimated Std Err: 0.024 # p-value: 7.8496e-05 # 95% Conf Interval: (0.047736, 0.14182) The controlled direct effect of ACE on the probability of death, had the mediator been set to 0 for every participant is 5.68%, 95%CI=[2.14%, 9.21%]. The controlled direct effect of ACE on the probability of death, had the mediator been set to 1 for every participant is 9.48%, 95%CI=[4.77%, 14.18%]. 9.2.2 For continuous outcomes # Define the data set with the continuous outcome Y_qol data_continuous &lt;- subset(df2_int, select = c(L0_male, L0_parent_low_educ_lv, A0_ace, L1, M_smoking, Y_qol)) # Replace the Qbar function (the 2d formula should be named Y_qol instead of Y_death) Qform &lt;- c(L1=&quot;Q.kplus1 ~ L0_male + L0_parent_low_educ_lv + A0_ace&quot;, Y_qol=&quot;Q.kplus1 ~ L0_male + L0_parent_low_educ_lv + L1 + A0_ace * M_smoking&quot;) set.seed(42) ## CDE, setting M=0 CDE_ltmle_M0_qol &lt;- ltmle(data = data_continuous, Anodes = c(&quot;A0_ace&quot;, &quot;M_smoking&quot;), Lnodes = c(&quot;L1&quot;), # intermediate confounders +/- baseline confounders Ynodes = c(&quot;Y_qol&quot;), survivalOutcome = FALSE, # TRUE for time-to-event outcomes Y Qform = Qform, gform = gform, abar = list(c(1,0), # counterfactual intervention do(A=1,M=0) c(0,0)), # counterfactual intervention do(A=0,M=0) SL.library = SL.library, estimate.time = FALSE, # estimate computation time? gcomp = FALSE, variance.method = &quot;ic&quot;) summary(CDE_ltmle_M0_qol) # Additive Treatment Effect: # Parameter Estimate: -4.8023 # Estimated Std Err: 0.43135 # p-value: &lt;2e-16 # 95% Conf Interval: (-5.6477, -3.9569) ## CDE, setting M=1 set.seed(42) CDE_ltmle_M1_qol &lt;- ltmle(data = data_continuous, Anodes = c(&quot;A0_ace&quot;, &quot;M_smoking&quot;), Lnodes = c(&quot;L1&quot;), # intermediate confounders +/- baseline Ynodes = c(&quot;Y_qol&quot;), survivalOutcome = FALSE, # TRUE for time-to-event outcomes Y Qform = Qform, gform = gform, abar = list(c(1,1), # counterfactual intervention do(A=1,M=1) c(0,1)), # counterfactual intervention do(A=0,M=1) SL.library = SL.library, estimate.time = FALSE, # estimate computation time? gcomp = FALSE, variance.method = &quot;ic&quot;) summary(CDE_ltmle_M1_qol) # Additive Treatment Effect: # Parameter Estimate: -10.219 # Estimated Std Err: 0.544 # p-value: &lt;2e-16 # 95% Conf Interval: (-11.285, -9.1523) The controlled direct effect of ACE on the quality of life score, had the mediator been set to 0 for every participant is -4.8, 95%CI=[-5.6, -4.0]. The controlled direct effect of ACE on the quality of life score, had the mediator been set to 1 for every participant is -10.2, 95%CI=[-11.3, -9.2]. References "],["appendix_a.html", "Chapter 10 Appendix A: Data generating mechanisms 10.1 First causal model: Data generating mechanism without mediator-outcome confounder affected by the exposure 10.2 Second causal model: Data generating mechanism with mediator-outcome confounder affected by the exposure 10.3 Simulation of the four data sets used in examples", " Chapter 10 Appendix A: Data generating mechanisms The data generating mechanisms are characterized by a causal model and a statistical model that generate data given in example. In the first causal model, the mediator-outcome confounder \\(L(1)\\) is not affected by the exposure. In the second causal model, the mediator-outcome confounder \\(L(1)\\) is affected by the exposure. 10.1 First causal model: Data generating mechanism without mediator-outcome confounder affected by the exposure This data generating mechanism is defined by the following set of structural equations: \\[\\begin{array}{lll} P(L(0)_{male} = 1) &amp;=&amp; p_{L(0)_{male}}\\\\ P(L(0)_{parent} = 1) &amp;=&amp; p_{L(0)_{parent}}\\\\ P(A_{ACE} = 1) &amp;=&amp; \\beta_{A} + \\beta_{male}^A \\times L(0)_{male} + \\beta_{parent}^A \\times L(0)_{parent}\\\\ P(L(1) = 1) &amp;=&amp; p_{L(1)}\\\\ P(M_{smoking} = 1) &amp;=&amp; \\beta_{M} + \\beta_{male}^M \\times L(0)_{male} + \\beta_{parent}^M \\times L(0)_{parent} + \\beta_{L(1)}^M \\times L(1) + \\beta_{A}^M \\times A_{ACE}\\\\ P(Y_{death} = 1) &amp;=&amp; \\beta_{Y} + \\beta_{male}^Y \\times L(0)_{male} + \\beta_{parent}^Y \\times L(0)_{parent} + \\beta_{L(1)}^Y \\times L(1)\\\\ &amp; &amp; + \\beta_{A}^Y \\times A_{ACE} + \\beta_{M}^Y \\times M_{smoking} + \\beta_{A \\ast M }^Y \\times A_{ACE} \\times M_{smoking}\\\\ \\mathbb{E}(Y_{Qol} = 1) &amp;=&amp; \\gamma_{Y} + \\gamma_{male}^Y \\times L(0)_{male} + \\gamma_{parent}^Y \\times L(0)_{parent} + \\gamma_{L(1)}^Y \\times L(1)\\\\ &amp; &amp;+ \\gamma_{A}^Y \\times A_{ACE} + \\gamma_{M}^Y \\times M_{smoking} + \\gamma_{A \\ast M }^Y \\times A_{ACE} \\times M_{smoking} + \\varepsilon_Y \\end{array}\\] where \\(\\varepsilon_Y \\sim \\mathcal{N}(0,\\sigma_Y = 10)\\). One can set the parameters of these structural equations using the following function param.causal.model.1(): param.causal.model.1 &lt;- function(A.M.interaction = NULL) { # L0 p_L0_male &lt;- 0.5 p_L0_parent_low_educ_lv &lt;- 0.65 # A: A0_ace &lt;- rbinom( 0.05 + 0.04 * L0_male + 0.06 * L0_parent_low_educ_lv ) b_A &lt;- 0.05 # reference prevalence is 5% b_male_A &lt;- 0.04 # + 0.04 for the effect of L0_male -&gt; A0_ace b_parent_educ_A &lt;- 0.06 # +0.06 for the effect of L0_parent_low_educ_lv -&gt; A0_ace # L1: intermediate confounder between M and Y, not influenced by A p_L1 &lt;- 0.3 # M: M_smoking &lt;- rbinom( 0.2 + 0.05 * L0_male + 0.06 * L0_parent_low_educ_lv + 0.07 * L1 + # 0.1 * A0_ace ) b_M &lt;- 0.2 # reference prevalence is 20% b_male_M &lt;- 0.05 # +0.05 for the effect of L0_male -&gt; M_smoking b_parent_educ_M &lt;- 0.06 # +0.06 for the effect of L0_parent_low_educ_lv -&gt; M_smoking b_L1_M &lt;- 0.07 # +0.07 for the effect of L1 -&gt; M_smoking b_A_M &lt;- 0.1 # +0.10 for the effect of A0_ace -&gt; M_smoking # Y binary: rbinom( 0.10 + 0.06 * L0_male + 0.04 * L0_parent_low_educ_lv + 0.05 * A0_ace + # 0.07 * L1 + 0.08 * M_smoking + # 0.03 * A0_ace * M_smoking * A.M.inter ) b_Y &lt;- 0.1 # reference prevalence is 10% b_male_Y &lt;- 0.06 # +0.06 for the effect of L0_male -&gt; Y b_parent_educ_Y &lt;- 0.04 # +0.04 for the effect of L0_parent_low_educ_lv -&gt; Y b_A_Y &lt;- 0.05 # 0.05 for the effect of A0_ace -&gt; Y b_L1_Y &lt;- 0.07 # +0.07 for the effect of L1 -&gt; Y b_M_Y &lt;- 0.08 # 0.08 for the effect of M_smoking -&gt; Y b_AM_Y &lt;- 0.03 # 0.03 for the interaction effect A0_ace * M_smoking -&gt; Y # Y continuous: (75 - 1 * L0_male - 3 * L0_parent_low_educ_lv - 4 * A0_ace -3.5 * L1 - # 9 * M_smoking -5 * A0_ace * M_smoking * A.M.inter ) + # rnorm(N, mean = 0, sd = 10) mu_Y &lt;- 75 # reference mean for QoL c_male_Y &lt;- -1 # -1 for the effect of L0_male -&gt; Y c_parent_educ_Y &lt;- -3 # -3 for the effect of L0_parent_low_educ_lv -&gt; Y c_A_Y &lt;- -4 # -4 for the effect of A0_ace -&gt; Y c_L1_Y &lt;- -3.5 # -3.5 for the effect of L1 -&gt; Y c_M_Y &lt;- -9 # -9 for the effect of M_smoking -&gt; Y c_AM_Y &lt;- -5 # - 5 for the interaction effect A0_ace * M_smoking -&gt; Y sd_Y &lt;- 10 # standard deviation of the residuals # A*M interaction ? A.M.inter &lt;- A.M.interaction coef &lt;- c( p_L0_male = p_L0_male, p_L0_parent_low_educ_lv = p_L0_parent_low_educ_lv, b_A = b_A, b_male_A = b_male_A, b_parent_educ_A = b_parent_educ_A, p_L1 = p_L1, b_M = b_M, b_male_M = b_male_M, b_parent_educ_M = b_parent_educ_M, b_L1_M = b_L1_M, b_A_M = b_A_M, b_Y = b_Y, b_male_Y = b_male_Y, b_parent_educ_Y = b_parent_educ_Y, b_A_Y = b_A_Y, b_L1_Y = b_L1_Y, b_M_Y = b_M_Y, b_AM_Y = b_AM_Y, mu_Y = mu_Y, c_male_Y = c_male_Y, c_parent_educ_Y = c_parent_educ_Y, c_A_Y = c_A_Y, c_L1_Y = c_L1_Y, c_M_Y = c_M_Y, c_AM_Y = c_AM_Y, sd_Y = sd_Y, A.M.inter = A.M.inter) return(coef) } 10.2 Second causal model: Data generating mechanism with mediator-outcome confounder affected by the exposure This data generating mechanism is defined by the following set of structural equations: \\[\\begin{array}{lll} P(L(0)_{male} = 1) &amp;=&amp; p_{L(0)_{male}}\\\\ P(L(0)_{parent} = 1) &amp;=&amp; p_{L(0)_{parent}}\\\\ P(A_{ACE} = 1) &amp;=&amp; \\beta_{A} + \\beta_{male}^A \\times L(0)_{male} + \\beta_{parent}^A \\times L(0)_{parent}\\\\ P(L(1) = 1) &amp;=&amp; \\beta_{L(1)} + \\beta_{male}^{L(1)} \\times L(0)_{male} + \\beta_{parent}^{L(1)} \\times L(0)_{parent} + \\beta_{A}^{L(1)} \\times A_{ACE}\\\\ P(M_{smoking} = 1) &amp;=&amp; \\beta_{M} + \\beta_{male}^M \\times L(0)_{male} + \\beta_{parent}^M \\times L(0)_{parent} + \\beta_{L(1)}^M \\times L(1) + \\beta_{A}^M \\times A_{ACE}\\\\ P(Y_{death} = 1) &amp;=&amp; \\beta_{Y} + \\beta_{male}^Y \\times L(0)_{male} + \\beta_{parent}^Y \\times L(0)_{parent} + \\beta_{L(1)}^Y \\times L(1)\\\\ &amp; &amp; + \\beta_{A}^Y \\times A_{ACE} + \\beta_{M}^Y \\times M_{smoking} + \\beta_{A \\ast M }^Y \\times A_{ACE} \\times M_{smoking}\\\\ \\mathbb{E}(Y_{Qol} = 1) &amp;=&amp; \\gamma_{Y} + \\gamma_{male}^Y \\times L(0)_{male} + \\gamma_{parent}^Y \\times L(0)_{parent} + \\gamma_{L(1)}^Y \\times L(1)\\\\ &amp; &amp;+ \\gamma_{A}^Y \\times A_{ACE} + \\gamma_{M}^Y \\times M_{smoking} + \\gamma_{A \\ast M }^Y \\times A_{ACE} \\times M_{smoking} + \\varepsilon_Y \\end{array}\\] where \\(\\varepsilon_Y \\sim \\mathcal{N}(0,\\sigma_Y = 10)\\). One can set the parameters of these structural equations using the following function param.causal.model.2(): param.causal.model.2 &lt;- function(A.M.interaction = NULL) { # L0 p_L0_male &lt;- 0.5 p_L0_parent_low_educ_lv &lt;- 0.65 # A: A0_ace &lt;- rbinom( 0.05 + 0.04 * L0_male + 0.06 * L0_parent_low_educ_lv ) b_A &lt;- 0.05 # reference prevalence is 5% b_male_A &lt;- 0.04 # + 0.04 for the effect of L0_male -&gt; A0_ace b_parent_educ_A &lt;- 0.06 # +0.06 for the effect of L0_parent_low_educ_lv -&gt; A0_ace # L1: L1 &lt;- rbinom( 0.30 - 0.05 * L0_male + 0.08 * L0_parent_low_educ_lv + # 0.2 * A0_ace ) b_L1 &lt;- 0.30 # reference prevalence is 30% b_male_L1 &lt;- -0.05 # - 0.05 for the effect of L0_male -&gt; L1 b_parent_L1 &lt;- +0.08 # + 0.08 for the effect of L0_parent_low_educ_lv -&gt; L1 b_A_L1 &lt;- +0.2 # +0.2 for the effect of A0_ace -&gt; L1 # M: M_smoking &lt;- rbinom( 0.2 + 0.05 * L0_male + 0.06 * L0_parent_low_educ_lv + # 0.2 * L1 + 0.1 * A0_ace ) b_M &lt;- 0.2 # reference prevalence is 20% b_male_M &lt;- 0.05 # +0.05 for the effect of L0_male -&gt; M_smoking b_parent_educ_M &lt;- 0.06 # +0.06 for the effect of L0_parent_low_educ_lv -&gt; M_smoking b_A_M &lt;- 0.1 # +0.10 for the effect of A0_ace -&gt; M_smoking b_L1_M &lt;- 0.2 # +0.2 for the effect of L1 -&gt; M_smoking # Y binary: rbinom( 0.10 + 0.06 * L0_male + 0.04 * L0_parent_low_educ_lv + # 0.05 * A0_ace + 0.07 * L1 + 0.08 * M_smoking + # 0.03 * A0_ace * M_smoking * A.M.inter ) b_Y &lt;- 0.1 # reference prevalence is 10% b_male_Y &lt;- 0.06 # +0.06 for the effect of L0_male -&gt; Y b_parent_educ_Y &lt;- 0.04 # +0.04 for the effect of L0_parent_low_educ_lv -&gt; Y b_A_Y &lt;- 0.05 # 0.05 for the effect of A0_ace -&gt; Y b_L1_Y &lt;- 0.07 # +0.07 for the effect of L1 -&gt; Y b_M_Y &lt;- 0.08 # 0.08 for the effect of M_smoking -&gt; Y b_AM_Y &lt;- 0.03 # 0.03 for the interaction effect A0_ace * M_smoking -&gt; Y # Y continuous: (75 - 1 * L0_male - 3 * L0_parent_low_educ_lv - 4 * A0_ace + # -3.5 * L1 - 9 * M_smoking + # -5 * A0_ace * M_smoking * A.M.inter ) + rnorm(N, mean = 0, sd = 10) mu_Y &lt;- 75 # reference mean for QoL c_male_Y &lt;- -1 # -1 for the effect of L0_male -&gt; Y c_parent_educ_Y &lt;- -3 # -3 for the effect of L0_parent_low_educ_lv -&gt; Y c_A_Y &lt;- -4 # -4 for the effect of A0_ace -&gt; Y c_L1_Y &lt;- -5 # -5 for the effect of L1 -&gt; Y c_M_Y &lt;- -9 # -9 for the effect of M_smoking -&gt; Y c_AM_Y &lt;- -5 # - 5 for the interaction effect A0_ace * M_smoking -&gt; Y sd_Y &lt;- 10 # standard deviation of the residuals # A*M interaction ? A.M.inter &lt;- A.M.interaction coef &lt;- c( p_L0_male = p_L0_male, p_L0_parent_low_educ_lv = p_L0_parent_low_educ_lv, b_A = b_A, b_male_A = b_male_A, b_parent_educ_A = b_parent_educ_A, b_L1 = b_L1, b_male_L1 = b_male_L1, b_parent_L1 = b_parent_L1, b_A_L1 = b_A_L1, b_M = b_M, b_male_M = b_male_M, b_parent_educ_M = b_parent_educ_M, b_L1_M = b_L1_M, b_A_M = b_A_M, b_Y = b_Y, b_male_Y = b_male_Y, b_parent_educ_Y = b_parent_educ_Y, b_A_Y = b_A_Y, b_L1_Y = b_L1_Y, b_M_Y = b_M_Y, b_AM_Y = b_AM_Y, mu_Y = mu_Y, c_male_Y = c_male_Y, c_parent_educ_Y = c_parent_educ_Y, c_A_Y = c_A_Y, c_L1_Y = c_L1_Y, c_M_Y = c_M_Y, c_AM_Y = c_AM_Y, sd_Y = sd_Y, A.M.inter = A.M.inter) return(coef) } 10.3 Simulation of the four data sets used in examples 10.3.1 Data sets generated from the causal model 1 The following function gen.data.causal.model.1 can be used to simulate data sets using the parameters defined previously in the param.causal.model.1 function. gen.data.causal.model.1 &lt;- function(N, A.M.inter) { # input parameters are the # sample size N and the presence of A*M interaction with A.M.inter = 0 or 1 b &lt;- param.causal.model.1(A.M.interaction = A.M.inter) # baseline confounders: parent&#39;s educational level=L0_parent_low_educ_lv &amp; sex=L0_male L0_male &lt;- rbinom(N, size = 1, prob = b[&quot;p_L0_male&quot;]) L0_parent_low_educ_lv &lt;- rbinom(N, size = 1, prob = b[&quot;p_L0_parent_low_educ_lv&quot;]) # exposure: A0_ace A0_ace &lt;- rbinom(N, size = 1, prob = b[&quot;b_A&quot;] + b[&quot;b_male_A&quot;] * L0_male + b[&quot;b_parent_educ_A&quot;] * L0_parent_low_educ_lv ) # intermediate confounder between M_smoking and Y, not affected by A0 L1 L1 &lt;- rbinom(N, size = 1, prob = b[&quot;p_L1&quot;]) # mediator: M_smoking M_smoking &lt;- rbinom(N, size = 1, prob = b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * L0_male + b[&quot;b_parent_educ_M&quot;] * L0_parent_low_educ_lv + b[&quot;b_A_M&quot;] * A0_ace + b[&quot;b_L1_M&quot;] * L1) # Y_death Y_death &lt;- rbinom(N, size = 1, prob = b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * L0_male + b[&quot;b_parent_educ_Y&quot;] * L0_parent_low_educ_lv + b[&quot;b_A_Y&quot;] * A0_ace + b[&quot;b_L1_Y&quot;] * L1 + b[&quot;b_M_Y&quot;] * M_smoking + b[&quot;b_AM_Y&quot;] * A0_ace * M_smoking * A.M.inter ) # Y_qol Y_qol &lt;- ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * L0_male + b[&quot;c_parent_educ_Y&quot;] * L0_parent_low_educ_lv + b[&quot;c_A_Y&quot;] * A0_ace + b[&quot;c_L1_Y&quot;] * L1 + b[&quot;c_M_Y&quot;] * M_smoking + b[&quot;c_AM_Y&quot;] * A0_ace * M_smoking * A.M.inter ) + rnorm(N, mean = 0, sd = b[&quot;sd_Y&quot;]) # data.frame data.sim &lt;- data.frame(L0_male, L0_parent_low_educ_lv, A0_ace, L1, M_smoking, Y_death, Y_qol) return( data.sim ) } Applying a sample size N=10000, we generate the df1.csv and df1_int.csv data sets. set.seed(1234) df1 &lt;- gen.data.causal.model.1(N=10000, A.M.inter=0) write.csv(df1, file = &quot;data/df1.csv&quot;, row.names = FALSE) set.seed(1234) df1_int &lt;- gen.data.causal.model.1(N=10000, A.M.inter=1) write.csv(df1_int, file = &quot;data/df1_int.csv&quot;, row.names = FALSE) head(df1) ## L0_male L0_parent_low_educ_lv A0_ace L1 M_smoking Y_death Y_qol ## 1 0 1 0 1 0 0 93.41819 ## 2 1 1 1 1 0 1 64.03221 ## 3 1 1 0 0 0 0 75.56249 ## 4 1 0 0 0 0 0 89.77055 ## 5 1 1 0 0 0 0 77.22353 ## 6 1 1 0 0 1 0 73.87975 head(df1_int) ## L0_male L0_parent_low_educ_lv A0_ace L1 M_smoking Y_death Y_qol ## 1 0 1 0 1 0 0 93.41819 ## 2 1 1 1 1 0 1 64.03221 ## 3 1 1 0 0 0 0 75.56249 ## 4 1 0 0 0 0 0 89.77055 ## 5 1 1 0 0 0 0 77.22353 ## 6 1 1 0 0 1 0 73.87975 10.3.2 Data sets generated from the causal model 2 The following function gen.data.causal.model.2 can be used to simulate data sets using the parameters defined previously in the param.causal.model.2 function. gen.data.causal.model.2 &lt;- function(N, A.M.inter) { # input parameters are the # sample size N and the presence of A*M interaction with A.M.inter = 0 or 1 b &lt;- param.causal.model.2(A.M.interaction = A.M.inter) # baseline confounders: parent&#39;s educational level=L0_parent_low_educ_lv &amp; sex=L0_male L0_male &lt;- rbinom(N, size = 1, prob = b[&quot;p_L0_male&quot;]) L0_parent_low_educ_lv &lt;- rbinom(N, size = 1, prob = b[&quot;p_L0_parent_low_educ_lv&quot;]) # exposure: A0_ace A0_ace &lt;- rbinom(N, size = 1, prob = b[&quot;b_A&quot;] + b[&quot;b_male_A&quot;] * L0_male + b[&quot;b_parent_educ_A&quot;] * L0_parent_low_educ_lv ) # intermediate confounder between M_smoking and Y, L1 &lt;- rbinom(N, size = 1, prob = b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * L0_male + b[&quot;b_parent_L1&quot;] * L0_parent_low_educ_lv + b[&quot;b_A_L1&quot;]* A0_ace) # mediator: M_smoking M_smoking &lt;- rbinom(N, size = 1, prob = b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * L0_male + b[&quot;b_parent_educ_M&quot;] * L0_parent_low_educ_lv + b[&quot;b_A_M&quot;] * A0_ace + b[&quot;b_L1_M&quot;] * L1) # Y_death Y_death &lt;- rbinom(N, size = 1, prob = b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * L0_male + b[&quot;b_parent_educ_Y&quot;] * L0_parent_low_educ_lv + b[&quot;b_A_Y&quot;] * A0_ace + b[&quot;b_L1_Y&quot;] * L1 + b[&quot;b_M_Y&quot;] * M_smoking + b[&quot;b_AM_Y&quot;] * A0_ace * M_smoking * A.M.inter ) # Y_qol Y_qol &lt;- ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * L0_male + b[&quot;c_parent_educ_Y&quot;] * L0_parent_low_educ_lv + b[&quot;c_A_Y&quot;] * A0_ace + b[&quot;c_L1_Y&quot;] * L1 + b[&quot;c_M_Y&quot;] * M_smoking + b[&quot;c_AM_Y&quot;] * A0_ace * M_smoking * A.M.inter ) + rnorm(N, mean = 0, sd = b[&quot;sd_Y&quot;]) # data.frame data.sim &lt;- data.frame(L0_male, L0_parent_low_educ_lv, A0_ace, L1, M_smoking, Y_death, Y_qol) return( data.sim ) } Applying a sample size N=10000, we generate the df2.csv and df2_int.csv data sets. set.seed(1234) df2 &lt;- gen.data.causal.model.2(N=10000, A.M.inter=0) write.csv(df2, file = &quot;data/df2.csv&quot;, row.names = FALSE) set.seed(1234) df2_int &lt;- gen.data.causal.model.2(N=10000, A.M.inter=1) write.csv(df2_int, file = &quot;data/df2_int.csv&quot;, row.names = FALSE) tail(df2) ## L0_male L0_parent_low_educ_lv A0_ace L1 M_smoking Y_death Y_qol ## 9995 0 1 0 1 1 0 53.25115 ## 9996 0 1 0 0 1 0 66.36484 ## 9997 0 1 1 1 1 0 74.20579 ## 9998 1 1 0 0 1 0 41.30248 ## 9999 0 0 0 1 0 0 85.60169 ## 10000 1 1 0 0 0 0 61.56969 tail(df2_int) ## L0_male L0_parent_low_educ_lv A0_ace L1 M_smoking Y_death Y_qol ## 9995 0 1 0 1 1 0 53.25115 ## 9996 0 1 0 0 1 0 66.36484 ## 9997 0 1 1 1 1 0 69.20579 ## 9998 1 1 0 0 1 0 41.30248 ## 9999 0 0 0 1 0 0 85.60169 ## 10000 1 1 0 0 0 0 61.56969 "],["appendix_b.html", "Chapter 11 Appendix B: Calculation of the true causal quantities 11.1 True causal quantities without mediator-ouctome confounder affected by the exposure 11.2 True causal quantities with mediator-ouctome confounder affected by the exposure", " Chapter 11 Appendix B: Calculation of the true causal quantities 11.1 True causal quantities without mediator-ouctome confounder affected by the exposure 11.1.1 Average total effects (ATE) The following function true.ATE1 can be used to run the calculation for the average total effects (ATE). true.ATE1 &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1), c(0,1)), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum&quot;) for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) ) - ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } ATE.death &lt;- sum(S[,&quot;sum&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1), c(0,1)), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum&quot;) for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) ) - ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } ATE.qol &lt;- sum(S[,&quot;sum&quot;]) return(list(ATE.death = ATE.death, ATE.qol = ATE.qol)) } true.ATE1.no.inter &lt;- true.ATE1(interaction = 0) true.ATE1.with.inter &lt;- true.ATE1(interaction = 1) The average total effects \\(\\text{ATE} = \\mathbb{E}(Y_1) - \\mathbb{E}(Y_0)\\) are: 0.058 for death and -4.9 for quality of life without interaction; 0.06955 for death and -6.825 for quality of life with interaction. 11.1.2 Controlled direct effects (CDE) The following function true.CDE1 can be used to run the calculation for controlled direct effects (CDE). true.CDE1 &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) # we estimate both CDE, fixing do(M) = 0 et do(M) = 1 and # using the corresponding lines in the S matrix S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^3)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum&quot;) for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } CDE.M0.death &lt;- sum(S[1:8,&quot;sum&quot;]) CDE.M1.death &lt;- sum(S[9:16,&quot;sum&quot;]) # quantitative outcome (QoL) # we estimate both CDE, fixing do(M) = 0 et do(M) = 1 and using # the corresponding lines in the S matrix for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } CDE.M0.qol &lt;- sum(S[1:8,&quot;sum&quot;]) CDE.M1.qol &lt;- sum(S[9:16,&quot;sum&quot;]) return(list(CDE.M0.death = CDE.M0.death, CDE.M1.death = CDE.M1.death, CDE.M0.qol = CDE.M0.qol, CDE.M1.qol = CDE.M1.qol)) } true.CDE1.no.inter &lt;- true.CDE1(interaction = 0) true.CDE1.with.inter &lt;- true.CDE1(interaction = 1) Setting \\(do(M=0)\\), the controlled direct effects \\(\\text{CDE}_{M=0} = \\mathbb{E}\\left(Y_{1,0} \\right) - \\mathbb{E}\\left(Y_{0,0} \\right)\\) are: 0.05 for death and -4 for quality of life without interaction, 0.05 for death and -4 for quality of life with interaction. Setting \\(do(M=1)\\), the controlled direct effects \\(\\text{CDE}_{M=1} = \\mathbb{E}\\left(Y_{1,1} \\right) - \\mathbb{E}\\left(Y_{0,1} \\right)\\) are: 0.05 for death and -4 for quality of life without interaction, 0.08 for death and -9 for quality of life with interaction. 11.1.3 Pure natural direct effect and Total natural indirect effect The following function true.PNDE.TNIE1 can be used to run the calculation for pure natural direct effects (PNDE) and total natural indirect effects (TNIE). true.PNDE.TNIE1 &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.pnde&quot;, &quot;sum.tnie&quot;) for (n in 1:16) { # PNDE S[n,&quot;sum.pnde&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # TNIE S[n,&quot;sum.tnie&quot;] &lt;- ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ( (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) + (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) - (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) - (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } PNDE.death &lt;- sum(S[,&quot;sum.pnde&quot;]) TNIE.death &lt;- sum(S[,&quot;sum.tnie&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.pnde&quot;, &quot;sum.tnie&quot;) for (n in 1:16) { # PNDE S[n,&quot;sum.pnde&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # TNIE S[n,&quot;sum.tnie&quot;] &lt;- ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ( (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) + (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) - (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) - (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } PNDE.qol &lt;- sum(S[,&quot;sum.pnde&quot;]) TNIE.qol &lt;- sum(S[,&quot;sum.tnie&quot;]) return(list(PNDE.death = PNDE.death, TNIE.death = TNIE.death, PNDE.qol = PNDE.qol, TNIE.qol = TNIE.qol)) } true.PNDE.TNIE.no.inter &lt;- true.PNDE.TNIE1(interaction = 0) true.PNDE.TNIE.with.inter &lt;- true.PNDE.TNIE1(interaction = 1) The \\(\\text{PNDE}=\\mathbb{E}\\left( Y_{1,M_0}\\right) - \\mathbb{E}\\left(Y_{0,M_0}\\right)\\) and \\(\\text{TNIE}=\\mathbb{E}\\left( Y_{1,M_1}\\right) - \\mathbb{E}\\left(Y_{1,M_0}\\right)\\) are respectively: 0.05 and 0.008 for death without interaction, 0.05855 and 0.011 for death with interaction, -4 and -0.9 for quality of life without interaction, -5.425 and -1.4 for quality of life with interaction. 11.1.4 Total natural direct effect and Pure natural indirect effect The following function true.TNDE.PNIE1 can be used to run the calculation for total natural direct effects (TNDE) and pure natural indirect effects (PNIE). true.TNDE.PNIE1 &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.tnde&quot;, &quot;sum.pnie&quot;) for (n in 1:16) { # TNDE S[n,&quot;sum.tnde&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # PNIE S[n,&quot;sum.pnie&quot;] &lt;- ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ( (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) + (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) - (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) - (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } TNDE.death &lt;- sum(S[,&quot;sum.tnde&quot;]) PNIE.death &lt;- sum(S[,&quot;sum.pnie&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.tnde&quot;, &quot;sum.pnie&quot;) for (n in 1:16) { # TNDE S[n,&quot;sum.tnde&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # PNIE S[n,&quot;sum.pnie&quot;] &lt;- ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ( (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) + (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) - (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) - (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } TNDE.qol &lt;- sum(S[,&quot;sum.tnde&quot;]) PNIE.qol &lt;- sum(S[,&quot;sum.pnie&quot;]) return(list(TNDE.death = TNDE.death, PNIE.death = PNIE.death, TNDE.qol = TNDE.qol, PNIE.qol = PNIE.qol)) } true.TNDE.PNIE.no.inter &lt;- true.TNDE.PNIE1(interaction = 0) true.TNDE.PNIE.with.inter &lt;- true.TNDE.PNIE1(interaction = 1) The \\(\\text{TNDE}=\\mathbb{E}\\left( Y_{1,M_1}\\right) - \\mathbb{E}\\left(Y_{0,M_1}\\right)\\) and \\(\\text{PNIE}=\\mathbb{E}\\left( Y_{0,M_1}\\right) - \\mathbb{E}\\left(Y_{0,M_0}\\right)\\) are respectively: 0.05 and 0.008 for death without interaction, 0.06155 and 0.008 for death with interaction, -4 and -0.9 for quality of life without interaction, -5.925 and -0.9 for quality of life with interaction. 11.1.5 Vanderweele’s 3-way decomposition The following function true.3way.decomp can be used to run the calculation for the 3-way decomposition of the total effect into a “pure natural direct effect” (PNDE), a “pure natural indirect effect” (PNIE) and a “mediated interactive effect” (MIE). true.3way.decomp &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.pde&quot;, &quot;sum.pie&quot;) for (n in 1:16) { # PDE S[n,&quot;sum.pde&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # PIE S[n,&quot;sum.pie&quot;] &lt;- ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ( (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) + (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) - (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) - (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } # MI S.MI &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4)) colnames(S.MI) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;, &quot;sum.mi&quot;) for (n in 1:8) { S.MI[n,&quot;sum.mi&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 1 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) + ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] )) * ( ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) - ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S.MI[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S.MI[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S.MI[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S.MI[n,&quot;parent_educ&quot;])) } PDE.death &lt;- sum(S[,&quot;sum.pde&quot;]) PIE.death &lt;- sum(S[,&quot;sum.pie&quot;]) MI.death &lt;- sum(S.MI[,&quot;sum.mi&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.pde&quot;, &quot;sum.pie&quot;) for (n in 1:16) { # PDE S[n,&quot;sum.pde&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # PIE S[n,&quot;sum.pie&quot;] &lt;- ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ( (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) + (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) - (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) - (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } # MI S.MI &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4)) colnames(S.MI) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;sum.mi&quot;) for (n in 1:8) { S.MI[n,&quot;sum.mi&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 1 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) + ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S.MI[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] )) * ( ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) - ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S.MI[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S.MI[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S.MI[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S.MI[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S.MI[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S.MI[n,&quot;parent_educ&quot;])) } PDE.qol &lt;- sum(S[,&quot;sum.pde&quot;]) PIE.qol &lt;- sum(S[,&quot;sum.pie&quot;]) MI.qol &lt;- sum(S.MI[,&quot;sum.mi&quot;]) return(list(PDE.death = PDE.death, PIE.death = PIE.death, MI.death = MI.death, PDE.qol = PDE.qol, PIE.qol = PIE.qol, MI.qol = MI.qol)) } true.3way.no.inter &lt;- true.3way.decomp(interaction = 0) true.3way.with.inter &lt;- true.3way.decomp(interaction = 1) The \\(\\text{PNDE}=\\mathbb{E}\\left( Y_{1,M_0}\\right) - \\mathbb{E}\\left( Y_{0,M_0}\\right)\\), the \\(\\text{PNIE}=\\mathbb{E}\\left(Y_{0,M_1}\\right) - \\mathbb{E}\\left(Y_{0,M_0}\\right)\\) and the \\(\\text{MIE}=\\mathbb{E}\\left( (Y_{1,1} - Y_{1,0} - Y_{0,1} + Y_{0,0}) \\times (M_1 - M_0) \\right)\\) are respectively: 0.05, 0.008 and 0.000 for death without interaction, 0.05855, 0.008 and 0.003 for death with interaction, -4, -0.9 and 0 for quality of life without interaction, -5.425, -0.9 and -0.5 for quality of life with interaction. 11.1.6 Vanderweele’s 4-way decomposition The following function true.4way.decomp can be used to run the calculation for the 4-way decomposition of the total effect into a “controlled direct effect” (CDE), a “reference interaction effect” (RIE), a “mediated interaction effect” (MIE) and a “pure natural indirect effect” (PNIE). true.4way.decomp &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1)), rep(NA,n=2^3), rep(NA,n=2^3), rep(NA,n=2^3), rep(NA,n=2^3)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;, &quot;L1&quot;, &quot;sum.cde&quot;, &quot;sum.intref&quot;, &quot;sum.intmed&quot;, &quot;sum.pie&quot;) for (n in 1:8) { # CDE S[n,&quot;sum.cde&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] ) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # INTref S[n,&quot;sum.intref&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 1 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) + ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] )) * ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # INTmed S[n,&quot;sum.intmed&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 1 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) + ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] )) * ( ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) - ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # PIE S[n,&quot;sum.pie&quot;] &lt;- ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 1 + b[&quot;b_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * 0 + b[&quot;b_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] ) ) * ( ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) - ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } CDE.death &lt;- sum(S[,&quot;sum.cde&quot;]) INTref.death &lt;- sum(S[,&quot;sum.intref&quot;]) INTmed.death &lt;- sum(S[,&quot;sum.intmed&quot;]) PIE.death &lt;- sum(S[,&quot;sum.pie&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1)), rep(NA,n=2^3), rep(NA,n=2^3), rep(NA,n=2^3), rep(NA,n=2^3)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;, &quot;L1&quot;, &quot;sum.cde&quot;, &quot;sum.intref&quot;, &quot;sum.intmed&quot;, &quot;sum.pie&quot;) for (n in 1:8) { # CDE S[n,&quot;sum.cde&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] ) ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # INTref S[n,&quot;sum.intref&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 1 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) + ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] )) * ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # INTmed S[n,&quot;sum.intmed&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 1 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 1 * 0 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) + ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] )) * ( ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) - ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) # PIE S[n,&quot;sum.pie&quot;] &lt;- ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 1 + b[&quot;c_AM_Y&quot;] * 0 * 1 * b[&quot;A.M.inter&quot;] ) - ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * 0 + b[&quot;c_AM_Y&quot;] * 0 * 0 * b[&quot;A.M.inter&quot;] ) ) * ( ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) - ( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } CDE.qol &lt;- sum(S[,&quot;sum.cde&quot;]) INTref.qol &lt;- sum(S[,&quot;sum.intref&quot;]) INTmed.qol &lt;- sum(S[,&quot;sum.intmed&quot;]) PIE.qol &lt;- sum(S[,&quot;sum.pie&quot;]) return(list(CDE.death = CDE.death, INTref.death = INTref.death, INTmed.death = INTmed.death, PIE.death = PIE.death, CDE.qol = CDE.qol, INTref.qol = INTref.qol, INTmed.qol = INTmed.qol, PIE.qol = PIE.qol)) } true.4way.no.inter &lt;- true.4way.decomp(interaction = 0) true.4way.with.inter &lt;- true.4way.decomp(interaction = 1) The \\(\\text{CDE}=\\mathbb{E}\\left(Y_{1,0} \\right) - \\mathbb{E}\\left(Y_{0,0}\\right)\\), \\(\\text{RIE}=\\left((Y_{1,1} - Y_{1,0} - Y_{0,1} + Y_{0,0}) \\times M_0\\right)\\), \\(\\text{MIE}= \\mathbb{E}\\left((Y_{1,1} - Y_{1,0} - Y_{0,1} + Y_{0,0}) \\times (M_1 - M_0)\\right)\\) and \\(\\text{PNIE}=\\mathbb{E}\\left(Y_{0,M_1}\\right) - \\mathbb{E}\\left(Y_{0,M_0}\\right)\\) are respectively: 0.05, 0.000, 0.000 and 0.008 for death without interaction, 0.05, 0.00855, 0.003 and 0.008 for death with interaction, -4, 0, 0 and -0.9 for quality of life without interaction, -4, -1.425, -0.5 and -0.9 for quality of life with interaction. 11.1.7 Marginal randomized direct and indirect effects The following function true.marg.random can be used to run the calculation for the marginal randomized natural direct (marginal MRDE) and indirect effects (marginal MRIE). true.marg.random &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # marginal distribution of M M.S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^5)) colnames(M.S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;A&quot;,&quot;sum&quot;) for (n in 1:32) { M.S[n,&quot;sum&quot;] &lt;- (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * M.S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * M.S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * M.S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * M.S[n,&quot;A&quot;])^( M.S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * M.S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * M.S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * M.S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * M.S[n,&quot;A&quot;]) )^( 1 - M.S[n,&quot;M&quot;] )) } M0.A0.L0_00.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A0.L0_01.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A0.L0_10.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A0.L0_11.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A0.L0_00.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A0.L0_01.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A0.L0_10.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A0.L0_11.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A0.L0_00.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A0.L0_01.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A0.L0_10.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A0.L0_11.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A0.L0_00.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A0.L0_01.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A0.L0_10.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A0.L0_11.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A1.L0_00.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A1.L0_01.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A1.L0_10.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A1.L0_11.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M0.A1.L0_00.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A1.L0_01.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A1.L0_10.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M0.A1.L0_11.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A1.L0_00.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A1.L0_01.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A1.L0_10.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A1.L0_11.L1_0 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==0,&quot;sum&quot;] M1.A1.L0_00.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A1.L0_01.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A1.L0_10.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] M1.A1.L0_11.L1_1 &lt;- M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1 &amp; M.S[,&quot;L1&quot;]==1,&quot;sum&quot;] # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A1.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + # A&#39;=1 M1.A1.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A1.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M1.A1.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A1.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A1.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M1.A1.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A1.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A1.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A1.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M0.A1.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A1.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(M.S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - M.S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + # A&#39;=0 M1.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(M.S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - M.S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=0 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + # A&#39;=0 M1.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(M.S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - M.S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } mrNDE.death &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) mrNIE.death &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A1.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + # A&#39;=1 M1.A1.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A1.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M1.A1.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A1.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A1.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M1.A1.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A1.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A1.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A1.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A1.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M0.A1.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A1.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(M.S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - M.S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + # A&#39;=0 M1.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(M.S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - M.S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=0 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + # A&#39;=0 M1.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M1.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M1.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L0_00.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_01.L1_0*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_10.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_11.L1_0*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==0) + M0.A0.L0_00.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_01.L1_1*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_10.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0)*(S[n,&quot;L1&quot;]==1) + M0.A0.L0_11.L1_1*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1)* (S[n,&quot;L1&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(M.S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - M.S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } mrNDE.qol &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) mrNIE.qol &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) return(list(mrNDE.death = mrNDE.death, mrNIE.death = mrNIE.death, mrNDE.qol = mrNDE.qol, mrNIE.qol = mrNIE.qol)) } true.marg.random.no.inter &lt;- true.marg.random(interaction = 0) true.marg.random.with.inter &lt;- true.marg.random(interaction = 1) The marginal randomized direct effect \\(\\text{MRDE}=\\mathbb{E}\\left(Y_{1,G_{0|L(0)}}\\right) - \\mathbb{E}\\left(Y_{0,G_{0|L(0)}}\\right)\\) and the marginal randomized indirect effect \\(\\text{MRIE}=\\mathbb{E}\\left(Y_{1,G_{1|L(0)}}\\right) - \\mathbb{E}\\left(Y_{1,G_{0|L(0)}}\\right)\\) are respectively: 0.05 and 0.008 for death without interaction, 0.05855 and 0.011 for death with interaction, -4 and -0.9 for quality of life without interaction, -5.425 and -1.4 for quality of life with interaction. 11.1.8 Conditional randomized direct and indirect effects The following function true.cond.random can be used to run the calculation for the conditional randomized natural direct (CRDE) and indirect effects (CRIE). true.cond.random &lt;- function(interaction = NULL) { b &lt;- param.causal.model.1(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=1 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=0 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } crNDE.death &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) crNIE.death &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=1 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=0 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * ((b[&quot;p_L1&quot;])^(S[n,&quot;L1&quot;])) * ((1 - b[&quot;p_L1&quot;])^(1 - S[n,&quot;L1&quot;])) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } crNDE.qol &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) crNIE.qol &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) return(list(crNDE.death = crNDE.death, crNIE.death = crNIE.death, crNDE.qol = crNDE.qol, crNIE.qol = crNIE.qol)) } true.cond.random.no.inter &lt;- true.cond.random(interaction = 0) true.cond.random.with.inter &lt;- true.cond.random(interaction = 1) The conditional randomized direct effect \\(\\text{CRDE}=\\mathbb{E}\\left(Y_{1,\\Gamma_{0\\mid L(0),L(1)}}\\right) - \\mathbb{E}\\left(Y_{0,\\Gamma_{0\\mid L(0),L(1)}}\\right)\\) and conditional randomized indirect effect \\(\\text{CRIE}=\\mathbb{E}\\left(Y_{1,\\Gamma_{1\\mid L(0),L(1)}}\\right) - \\mathbb{E}\\left(Y_{1,\\Gamma_{0\\mid L(0),L(1)}}\\right)\\) are respectively: 0.05 and 0.008 for death without interaction, 0.05855 and 0.011 for death with interaction, -4 and -0.9 for quality of life without interaction, -5.425 and -1.4 for quality of life with interaction. True values without time varying confounders Effects Without \\(A*M\\) interaction with \\(A*M\\) interaction Binary outcome Average total effect (ATE) 0.058 0.06955 Controlled direct effect (CDE) - CDE, setting do(M=0) 0.05 0.05 - CDE, setting do(M=1) 0.05 0.08 Pure NDE and Total NIE - PNDE 0.05 0.05855 - TNIE 0.008 0.011 Total NDE and Pure NIE - TNDE 0.05 0.06155 - PNIE 0.008 0.008 3-way decomposition - PDE 0.05 0.05855 - PIE 0.008 0.008 - MI 0.000 0.003 4-way decomposition - CDE 0.05 0.05 - INTref 0.000 0.00855 - INTmed 0.000 0.003 - PIE 0.008 0.008 Marginal randomized - marginal rNDE 0.05 0.05855 - marginal rNIE 0.008 0.011 Conditional randomized - conditional rNDE 0.05 0.05855 - conditional rNIE 0.008 0.011 Quantitative outcome Average total effect (ATE) -4.9 -6.825 Controlled direct effect (CDE) - CDE, setting do(M=0) -4 -4 - CDE, setting do(M=1) -4 -9 Pure NDE and Total NIE - PNDE -4 -5.425 - TNIE -0.9 -1.4 Total NDE and Pure NIE - TNDE -4 -5.925 - PNIE -0.9 -0.9 3-way decomposition - PDE -4 -5.425 - PIE -0.9 -0.9 - MI 0 -0.5 4-way decomposition - CDE -4 -4 - INTref 0.000 -1.425 - INTmed 0.000 -0.5 - PIE -0.9 -0.9 Marginal randomized - marginal rNDE -4 -5.425 - marginal rNIE -0.9 -1.4 Conditional randomized - conditional rNDE -4 -5.425 - conditional rNIE -0.9 -1.4 11.2 True causal quantities with mediator-ouctome confounder affected by the exposure 11.2.1 Average total effects (ATE) The following function true.ATE.tv.conf can be used to run the calculation for the average total effects (ATE). true.ATE.time.var.conf &lt;- function(interaction = NULL) { b &lt;- param.causal.model.2(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1), c(0,1)), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum&quot;) for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) ) - ( ( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) ) ) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } ATE.death &lt;- sum(S[,&quot;sum&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1), c(0,1)), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum&quot;) for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) ) - ( ( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0) )^( 1 - S[n,&quot;M&quot;] )) ) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) ) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } ATE.qol &lt;- sum(S[,&quot;sum&quot;]) return(list(ATE.death = ATE.death, ATE.qol = ATE.qol)) } true.ATE2.no.inter &lt;- true.ATE.time.var.conf(interaction = 0) true.ATE2.with.inter &lt;- true.ATE.time.var.conf(interaction = 1) The average total effects \\(\\text{ATE} = \\mathbb{E}(Y_1) - \\mathbb{E}(Y_0)\\) are: 0.0752 for death and -6.26 for quality of life without interaction 0.089282 for death and -8.607 for quality of life with interaction 11.2.2 Controlled direct effects (CDE) The following function true.CDE.time.var can be used to run the calculation for controlled direct effects (CDE). true.CDE.time.var &lt;- function(interaction = NULL) { b &lt;- param.causal.model.2(A.M.interaction = interaction) # binary outcome (death) # we estimate both CDE, fixing do(M) = 0 et do(M) = 1 and using the # corresponding lines in the S matrix S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^3)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum&quot;) for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( (( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) ) - (( b[&quot;b_Y&quot;] + b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) ) ) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } CDE.M0.death &lt;- sum(S[1:8,&quot;sum&quot;]) CDE.M1.death &lt;- sum(S[9:16,&quot;sum&quot;]) # quantitative outcome (QoL) # we estimate both CDE, fixing do(M) = 0 et do(M) = 1 and using the # corresponding lines in the S matrix for (n in 1:16) { S[n,&quot;sum&quot;] &lt;- ( (( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] ))) - (( b[&quot;mu_Y&quot;] + b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) ) ) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } CDE.M0.qol &lt;- sum(S[1:8,&quot;sum&quot;]) CDE.M1.qol &lt;- sum(S[9:16,&quot;sum&quot;]) return(list(CDE.M0.death = CDE.M0.death, CDE.M1.death = CDE.M1.death, CDE.M0.qol = CDE.M0.qol, CDE.M1.qol = CDE.M1.qol)) } true.CDE2.no.inter &lt;- true.CDE.time.var(interaction = 0) true.CDE2.with.inter &lt;- true.CDE.time.var(interaction = 1) Setting \\(do(M=0)\\), the controlled direct effects \\(\\text{CDE}_{M=0} = \\mathbb{E}\\left(Y_{1,0} \\right) - \\mathbb{E}\\left(Y_{0,0} \\right)\\) are: 0.064 for death and -5 for quality of life without interaction 0.064 for death and -5 for quality of life with interaction Setting \\(do(M=1)\\), the controlled direct effects \\(\\text{CDE}_{M=1} = \\mathbb{E}\\left(Y_{1,1} \\right) - \\mathbb{E}\\left(Y_{0,1} \\right)\\) are: 0.064 for death and -5 for quality of life without interaction 0.094 for death and -10 for quality of life with interaction 11.2.3 Marginal randomized direct and indirect effects The following function true.marg.random.time.var can be used to run the calculation for the marginal randomized natural direct (marginal MRDE) and indirect effects (marginal MRIE). true.marg.random.time.var &lt;- function(interaction = NULL) { b &lt;- param.causal.model.2(A.M.interaction = interaction) # marginal distribution of M M.S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^5)) colnames(M.S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;A&quot;,&quot;sum&quot;) for (n in 1:32) { M.S[n,&quot;sum&quot;] &lt;- (( b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * M.S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * M.S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * M.S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * M.S[n,&quot;A&quot;])^( M.S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * M.S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * M.S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * M.S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * M.S[n,&quot;A&quot;]) )^( 1 - M.S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * M.S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * M.S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * M.S[n,&quot;A&quot;])^( M.S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * M.S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * M.S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * M.S[n,&quot;A&quot;]))^( 1 - M.S[n,&quot;L1&quot;] )) } M0.A0.L00 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M0.A0.L01 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M0.A0.L10 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M0.A0.L11 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M1.A0.L00 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M1.A0.L01 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M1.A0.L10 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M1.A0.L11 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==0 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M0.A1.L00 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M0.A1.L01 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M0.A1.L10 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M0.A1.L11 &lt;- sum(M.S[M.S[,&quot;M&quot;]==0 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M1.A1.L00 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M1.A1.L01 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==0 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) M1.A1.L10 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==0,&quot;sum&quot;]) M1.A1.L11 &lt;- sum(M.S[M.S[,&quot;M&quot;]==1 &amp; M.S[,&quot;A&quot;]==1 &amp; M.S[,&quot;male&quot;]==1 &amp; M.S[,&quot;parent_educ&quot;]==1,&quot;sum&quot;]) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A1.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + # A&#39;=1 M1.A1.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M1.A1.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M1.A1.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A1.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + M0.A1.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M0.A1.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M0.A1.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + # A&#39;=0 M1.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M1.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M1.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M0.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=0 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + # A&#39;=0 M1.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M1.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M1.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M0.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=0 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } mrNDE.death &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) mrNIE.death &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A1.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + # A&#39;=1 M1.A1.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M1.A1.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M1.A1.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A1.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + M0.A1.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M0.A1.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M0.A1.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + # A&#39;=0 M1.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M1.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M1.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M0.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=0 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * ((M1.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + # A&#39;=0 M1.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M1.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M1.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( S[n,&quot;M&quot;] )) * ((M0.A0.L00*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L01*(S[n,&quot;male&quot;]==0)*(S[n,&quot;parent_educ&quot;]==1) + M0.A0.L10*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==0) + M0.A0.L11*(S[n,&quot;male&quot;]==1)*(S[n,&quot;parent_educ&quot;]==1) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=0 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } mrNDE.qol &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) mrNIE.qol &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) return(list(mrNDE.death = mrNDE.death, mrNIE.death = mrNIE.death, mrNDE.qol = mrNDE.qol, mrNIE.qol = mrNIE.qol)) } true.marg.random2.no.inter &lt;- true.marg.random.time.var(interaction = 0) true.marg.random2.with.inter &lt;- true.marg.random.time.var(interaction = 1) The marginal randomized direct effect \\(\\text{MRDE}=\\mathbb{E}\\left(Y_{1,G_{0|L(0)}}\\right) - \\mathbb{E}\\left(Y_{0,G_{0|L(0)}}\\right)\\) and the marginal randomized indirect effect \\(\\text{MRIE}=\\mathbb{E}\\left(Y_{1,G_{1|L(0)}}\\right) - \\mathbb{E}\\left(Y_{1,G_{0|L(0)}}\\right)\\) are respectively: 0.064 and 0.0112 for death without interaction 0.073882 and 0.0154 for death with interaction -5 and -1.26 for quality of life without interaction -6.647 and -1.96 for quality of life with interaction 11.2.4 Conditional randomized direct and indirect effects The following function true.cond.random.time.var can be used to run the calculation for the conditional randomized natural direct (CRDE) and the conditional randomized indirect effects (CRIE). true.cond.random.time.var &lt;- function(interaction = NULL) { b &lt;- param.causal.model.2(A.M.interaction = interaction) # binary outcome (death) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=1 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=1 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 1 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;b_Y&quot;] + # A=0 b[&quot;b_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_Y&quot;] * 0 + b[&quot;b_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;b_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=0 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } crNDE.death &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) crNIE.death &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) # quantitative outcome (QoL) S &lt;- cbind(expand.grid(c(0,1),c(0,1),c(0,1),c(0,1)), rep(NA,n=2^4), rep(NA,n=2^4), rep(NA,n=2^4)) colnames(S) &lt;- list(&quot;male&quot;,&quot;parent_educ&quot;,&quot;L1&quot;,&quot;M&quot;,&quot;sum.psi11&quot;, &quot;sum.psi10&quot;, &quot;sum.psi00&quot;) for (n in 1:16) { S[n,&quot;sum.psi11&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=1 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 1 ) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi10&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=1 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 1 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 1 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=1 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 1))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) S[n,&quot;sum.psi00&quot;] &lt;- ( b[&quot;mu_Y&quot;] + # A=0 b[&quot;c_male_Y&quot;] * S[n,&quot;male&quot;] + b[&quot;c_parent_educ_Y&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;c_A_Y&quot;] * 0 + b[&quot;c_L1_Y&quot;] * S[n,&quot;L1&quot;] + b[&quot;c_M_Y&quot;] * S[n,&quot;M&quot;] + b[&quot;c_AM_Y&quot;] * 0 * S[n,&quot;M&quot;] * b[&quot;A.M.inter&quot;] ) * (( b[&quot;b_M&quot;] + # A&#39;=0 b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 )^( S[n,&quot;M&quot;] )) * (( 1 - (b[&quot;b_M&quot;] + b[&quot;b_male_M&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_educ_M&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_L1_M&quot;] * S[n,&quot;L1&quot;] + b[&quot;b_A_M&quot;] * 0 ) )^( 1 - S[n,&quot;M&quot;] )) * (( b[&quot;b_L1&quot;] + # A=0 b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0)^( S[n,&quot;L1&quot;] )) * (( 1 - ( b[&quot;b_L1&quot;] + b[&quot;b_male_L1&quot;] * S[n,&quot;male&quot;] + b[&quot;b_parent_L1&quot;] * S[n,&quot;parent_educ&quot;] + b[&quot;b_A_L1&quot;] * 0))^( 1 - S[n,&quot;L1&quot;] )) * ((b[&quot;p_L0_male&quot;])^(S[n,&quot;male&quot;])) * ((1 - b[&quot;p_L0_male&quot;])^(1 - S[n,&quot;male&quot;])) * ((b[&quot;p_L0_parent_low_educ_lv&quot;])^(S[n,&quot;parent_educ&quot;])) * ((1 - b[&quot;p_L0_parent_low_educ_lv&quot;])^(1 - S[n,&quot;parent_educ&quot;])) } crNDE.qol &lt;- sum(S[,&quot;sum.psi10&quot;]) - sum(S[,&quot;sum.psi00&quot;]) crNIE.qol &lt;- sum(S[,&quot;sum.psi11&quot;]) - sum(S[,&quot;sum.psi10&quot;]) return(list(crNDE.death = crNDE.death, crNIE.death = crNIE.death, crNDE.qol = crNDE.qol, crNIE.qol = crNIE.qol)) } true.cond.random2.no.inter &lt;- true.cond.random.time.var(interaction = 0) true.cond.random2.with.inter &lt;- true.cond.random.time.var(interaction = 1) The conditional randomized direct effect \\(\\text{CRDE}=\\mathbb{E}\\left(Y_{1,\\Gamma_{0\\mid L(0),L(1)}}\\right) - \\mathbb{E}\\left(Y_{0,\\Gamma_{0\\mid L(0),L(1)}}\\right)\\) and conditional randomized indirect effect \\(\\text{CRIE}=\\mathbb{E}\\left(Y_{1,\\Gamma_{1\\mid L(0),L(1)}}\\right) - \\mathbb{E}\\left(Y_{1,\\Gamma_{0\\mid L(0),L(1)}}\\right)\\) are respectively: 0.0672 and 0.008 for death without interaction, 0.078282 and 0.011 for death with interaction, -5.36 and -0.9 for quality of life without interaction, -7.207 and -1.4 for quality of life with interaction. True values with time varying confounders Effects Without \\(A*M\\) interaction with \\(A*M\\) interaction Binary outcome Average total effect (ATE) 0.0752 0.089282 Controlled direct effect (CDE) - CDE, setting do(M=0) 0.064 0.064 - CDE, setting do(M=1) 0.064 0.094 Marginal randomized - marginal rNDE 0.064 0.073882 - marginal rNIE 0.0112 0.0154 Conditional randomized - conditional rNDE 0.0672 0.078282 - conditional rNIE 0.008 0.011 Quantitative outcome Average total effect (ATE) -6.26 -8.607 Controlled direct effect (CDE) - CDE, setting do(M=0) -5 -5 - CDE, setting do(M=1) -5 -10 Marginal randomized - marginal rNDE -5 -6.647 - marginal rNIE -1.26 -1.96 Conditional randomized - conditional rNDE -5.36 -7.207 - conditional rNIE -0.9 -1.4 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
